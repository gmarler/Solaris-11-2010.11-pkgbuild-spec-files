Index: src/trackerd/tracker-utils.h
===================================================================
--- src/trackerd/tracker-utils.h	(revision 1092)
+++ src/trackerd/tracker-utils.h	(working copy)
@@ -124,6 +124,7 @@
 	INDEX_CONFIG,
 	INDEX_APPLICATIONS,
 	INDEX_FILES,
+	INDEX_WEBHISTORY,
 	INDEX_CRAWL_FILES,
 	INDEX_CONVERSATIONS,	
 	INDEX_EXTERNAL,	
Index: src/trackerd/trackerd.c
===================================================================
--- src/trackerd/trackerd.c	(revision 1092)
+++ src/trackerd/trackerd.c	(working copy)
@@ -914,6 +914,9 @@
 	} else if (strcmp (service_info, "Files") == 0) {
 		tracker_db_index_file (db_con, info, NULL, NULL);
 
+        } else if (strcmp (service_info, "WebHistory") ==0 ) {
+                tracker_db_index_webhistory (db_con, info);
+
 	} else if (g_str_has_suffix (service_info, "Conversations")) {
 		tracker_db_index_conversation (db_con, info);
 
@@ -1238,7 +1241,27 @@
 							break;
 
 
-						
+					        case INDEX_WEBHISTORY: {
+
+                                                                gchar *firefox_dir;
+                                                                GSList *list = NULL;
+                                                                firefox_dir = g_build_filename(g_get_home_dir(),".xesam/Firefox/ToIndex",NULL);
+                                                                if (tracker_file_is_valid(firefox_dir)) {
+                                                                     list = g_slist_prepend( NULL, firefox_dir);
+ 
+                                                                     tracker_log("Starting firefox web history indexing...");
+                                                                     tracker_add_service_path("WebHistory",firefox_dir);
+
+							             tracker_db_start_transaction (db_con->cache);		
+                                                                     process_directory_list(db_con,list, TRUE);
+                                                                     tracker_db_end_transaction (db_con->cache);
+                                                                     g_slist_free(list);
+                                         
+                                                                 }
+                                                        	g_free(firefox_dir);
+                                                        }
+                                                        break;
+
 						case INDEX_EXTERNAL:
 							break;
 
Index: src/trackerd/tracker-db.c
===================================================================
--- src/trackerd/tracker-db.c	(revision 1092)
+++ src/trackerd/tracker-db.c	(working copy)
@@ -918,9 +918,9 @@
 void
 tracker_db_index_file (DBConnection *db_con, FileInfo *info, const char *attachment_uri, const char *attachment_service)
 {
-	char *services_with_metadata[] = {"Documents", "Music", "Videos", "Images", NULL};
-	char *services_with_text[] = {"Documents", "Development", "Text", NULL};
-	char *services_with_thumbs[] = {"Documents", "Images", "Videos", NULL};
+	char *services_with_metadata[] = {"Documents", "Music", "Videos", "Images","WebHistory", NULL};
+	char *services_with_text[] = {"Documents", "Development", "Text", "WebHistory",NULL};
+	char *services_with_thumbs[] = {"Documents", "Images", "Videos", "WebHistory",NULL};
 
 	GHashTable	*meta_table;
 	const char	*ext;
@@ -993,6 +993,38 @@
 		tracker_add_metadata_to_table  (meta_table, g_strdup ("File:Modified"), tracker_date_to_str (info->mtime));
 		tracker_add_metadata_to_table  (meta_table, g_strdup ("File:Accessed"), tracker_date_to_str (info->atime));
 
+                /* need to add special data for web history */
+                if ( attachment_service != NULL && strcmp(attachment_service,"WebHistory") == 0)  {
+                     gchar* meta_file = g_strconcat(dirname,"/.",filename,NULL);
+                     FILE* fp = g_fopen(meta_file, "r");
+                     if (fp != NULL) {
+                          char buf[512];
+                          fgets(buf,512,fp);  //get the first line, it is URL for this web history object
+                          tracker_debug("URL for this WebHistory is %s\n",buf);
+                          tracker_add_metadata_to_table  (meta_table, g_strdup ("Doc:URL"), g_strdup(buf));
+                          fgets(buf,512,fp);
+                          fgets(buf,512,fp);
+                          fgets(buf,512,fp);
+                          fgets(buf,512,fp);  // get the keywords for this file
+                          if (buf != NULL) {
+                              /* format like t:dc:keyword=xxx */
+                              gchar** keys = g_strsplit(buf,"=",0);
+                              if (keys != NULL && strcmp(keys[0],"t:dc:keyword") == 0) {
+                                  char doc_keyword[512]= NULL;
+                                  strncat(doc_keyword,keys[1],strlen(keys[1])-1);
+                                  tracker_debug("keywords for this is %s\n",doc_keyword);
+                                  tracker_add_metadata_to_table  (meta_table, g_strdup ("Doc:Keywords"), g_strdup(doc_keyword));
+                                  g_strfreev(keys);
+                              }
+                          }
+
+                          fclose(fp);
+                     }
+                     g_free(meta_file);
+                }
+                                
+
+
 		is_external_service = g_str_has_prefix (info->mime, "service/");
 		is_file_indexable = (!info->is_directory && (strcmp (info->mime, "unknown") != 0) && (strcmp (info->mime, "symlink") != 0) && tracker_file_is_indexable (info->uri));
 
@@ -1061,5 +1093,9 @@
 	tracker_db_index_file (db_con, info, NULL, "GaimConversations");
 }
 
+void 
+tracker_db_index_webhistory(DBConnection *db_con, FileInfo *info)
+{
+	tracker_db_index_file (db_con, info, NULL, "WebHistory");
+}
 
-
Index: src/trackerd/tracker-utils.c
===================================================================
--- src/trackerd/tracker-utils.c	(revision 1092)
+++ src/trackerd/tracker-utils.c	(working copy)
@@ -3869,7 +3869,7 @@
 		return FALSE;
 	}
 
-	if ((st.f_bavail * 100 / st.f_blocks) <= tracker->low_diskspace_limit) {
+	if (((long long) st.f_bavail * 100 / st.f_blocks) <= tracker->low_diskspace_limit) {
 		tracker_error ("Disk space is low!");
 		return TRUE;
 	}
Index: src/libtracker/tracker.h
===================================================================
--- src/libtracker/tracker.h	(revision 1092)
+++ src/libtracker/tracker.h	(working copy)
@@ -69,7 +69,7 @@
         SERVICE_APPOINTMENTS,
         SERVICE_TASKS,
         SERVICE_BOOKMARKS,
-        SERVICE_HISTORY,
+        SERVICE_WEBHISTORY,
         SERVICE_PROJECTS
 } ServiceType;
 
Index: src/libtracker/tracker.c
===================================================================
--- src/libtracker/tracker.c	(revision 1092)
+++ src/libtracker/tracker.c	(working copy)
@@ -95,7 +95,7 @@
 "Appointments",
 "Tasks",
 "Bookmarks",
-"History",
+"WebHistory",
 "Projects",
 NULL
 };
Index: src/libtracker-gtk/tracker-metadata-tile.c
===================================================================
--- src/libtracker-gtk/tracker-metadata-tile.c	(revision 1092)
+++ src/libtracker-gtk/tracker-metadata-tile.c	(working copy)
@@ -299,7 +299,26 @@
 	EMAIL_N_KEYS
 };
 
+static char *webhistory_keys[] =
+{
+        "Doc:URL",
+        "Doc:Title",
+        "File:Size",
+        "File:Mime",
+        "Doc:Keywords",
+        NULL
+};
 
+enum { 
+        WEBHISTORY_URL,
+        WEBHISTORY_TITLE,
+        WEBHISTORY_SIZE,
+        WEBHISTORY_MIME,
+        WEBHISTORY_KEYWORDS,
+        WEBHISTORY_N_KEYS
+}; 
+
+
 static char *app_keys[] =
 {
 	"App:DisplayName",
@@ -783,6 +802,39 @@
 }
 
 
+/*populates the metadata tile for a web history url */
+static void
+_tile_tracker_populate_webhistory(char **array, GError *error, TrackerMetadataTile *tile )
+{
+        if (error) {
+                g_print ("METADATA_TILE_ERROR : %s", error->message);
+                g_clear_error (&error);
+                gtk_widget_hide (GTK_WIDGET(tile));
+                return;
+        }
+
+        TrackerMetadataTilePrivate *priv;
+
+        priv = TRACKER_METADATA_TILE_GET_PRIVATE (tile);
+
+        /* create title */
+        _property_to_label ( priv->title, array[WEBHISTORY_URL] , "<span size='large'><b>%s</b></span>");
+
+        /* then set the remaining properties */
+        _property_to_label ( priv->info1, array[WEBHISTORY_TITLE] , _("Subject : <b>%s</b>"));
+        _property_to_label ( priv->info2, array[WEBHISTORY_KEYWORDS] , "Keywords: <b>%s</b>");
+
+        tracker_metadata_tile_show (tile);
+        g_strfreev (array);
+
+        _show_labels (tile, FALSE);
+        gtk_widget_show (priv->info1);
+        gtk_widget_show (priv->info2);
+
+}
+
+
+
 /* UTILILTY FUNCTIONS FOR CONVERSIONS */
 
 /* Converts bitrate to kbs */
@@ -1083,7 +1135,15 @@
 					    (gpointer)tile);
 		break;
 
+        case SERVICE_WEBHISTORY:
+              
+                tracker_metadata_get_async (priv->client, SERVICE_WEBHISTORY,
+                                            uri, webhistory_keys,
+                                            (TrackerArrayReply)_tile_tracker_populate_webhistory,
+                                            (gpointer)tile);
+                break;
 
+
         case SERVICE_IMAGES:
 
 		tracker_metadata_get_async (priv->client, SERVICE_IMAGES, 
Index: src/tracker-search-tool/tracker-search-tool.c
===================================================================
--- src/tracker-search-tool/tracker-search-tool.c	(revision 1092)
+++ src/tracker-search-tool/tracker-search-tool.c	(working copy)
@@ -126,12 +126,12 @@
 "Appointments",
 "Tasks",
 "Bookmarks",
-"History",
+"WebHistory",
 "Projects",
 NULL
 };
 
-static service_info_t services[12] = {
+static service_info_t services[13] = {
 
         { "Emails",        N_("Emails"),       "stock_mail",               NULL, SERVICE_EMAILS,            NULL, FALSE, 0, 0},
         { "Files",         N_("All Files"),    "system-file-manager",      NULL, SERVICE_FILES,             NULL, FALSE, 0, 0},
@@ -144,6 +144,7 @@
         { "Development",   N_("Development"),  "applications-development", NULL, SERVICE_DEVELOPMENT_FILES, NULL, FALSE, 0, 0},
         { "Conversations", N_("Chat Logs"),    "stock_help-chat",          NULL, SERVICE_CONVERSATIONS,     NULL, FALSE, 0, 0},
         { "Applications",  N_("Applications"), "system-run",               NULL, SERVICE_APPLICATIONS,      NULL, FALSE, 0, 0},
+        { "WebHistory",    N_("WebHistory"),    "text-html",               NULL, SERVICE_WEBHISTORY,        NULL, FALSE, 0, 0},
         { NULL,            NULL,               NULL,                       NULL, -1,                        NULL, FALSE, 0, 0},
 };
 
@@ -612,8 +613,20 @@
 		if (icon[0] == '/') {
 			pixbuf = gdk_pixbuf_new_from_file_at_scale (icon, ICON_SIZE, ICON_SIZE, TRUE, NULL);
 		} else {
-			pixbuf = gtk_icon_theme_load_icon (gtk_icon_theme_get_default (), icon,
+                        if ((g_str_has_suffix(icon,"png") == TRUE) || g_str_has_suffix(icon,"xpm")==TRUE || g_str_has_suffix(icon,"svg") == TRUE) 
+                        {
+ 				char icon_filename[50] ;
+                                g_strlcat(icon_filename,icon, strlen(icon)-3);
+                          
+				pixbuf = gtk_icon_theme_load_icon (gtk_icon_theme_get_default (), icon_filename,
 			                                             ICON_SIZE, 0, NULL);
+                        	g_free(icon_filename);
+                        }
+                        else {
+                        	pixbuf = gtk_icon_theme_load_icon (gtk_icon_theme_get_default (),icon,
+                                                                     ICON_SIZE, 0, NULL);
+                        }
+
 		}
 	}
 
@@ -1545,7 +1558,7 @@
 
 		if (type != -1) {
 			for (service = services; service->service; ++service) {
-				if (service->service_type == (guint32) type) {
+				if (strcmp(service->service,meta[0]) == 0) {
 					service->hit_count = atoi (meta[1]);
 					break;
 				}
@@ -1942,6 +1955,7 @@
 	g_hash_table_insert (gsearch->category_table, g_strdup ("Development"), &services[8]);
 	g_hash_table_insert (gsearch->category_table, g_strdup ("Conversations"), &services[9]);
 	g_hash_table_insert (gsearch->category_table, g_strdup ("Applications"), &services[10]);
+	g_hash_table_insert (gsearch->category_table, g_strdup ("WebHistory"), &services[11]);
 	//g_hash_table_insert (gsearch->category_table, g_strdup ("EmailAttachments"), &services[11]);
 	
 	gsearch->category_store = gtk_list_store_new (NUM_CATEGORY_COLUMNS, GDK_TYPE_PIXBUF, G_TYPE_STRING, G_TYPE_STRING);
Index: data/services/default.service
===================================================================
--- data/services/default.service	(revision 1092)
+++ data/services/default.service	(working copy)
@@ -34,6 +34,25 @@
 ShowServiceFiles=true
 ShowServiceDirectories=true
 
+[WebHistory]
+DisplayName=Web History
+Description=Web History
+Parent=Files
+UIVisible=true
+Icon=x-office-document
+KeyMetadata1=Doc:Title
+KeyMetadata2=Doc:URL
+KeyMetadata3=Doc:Keywords
+KeyMetadata4=User:Keywords
+TabularMetadata=File:Name;File:Mime;Doc:Title;Doc:URL;Doc:Author;File:Size;File:Modified;Doc:Created;
+TileMetadata=Doc:Title;Doc:URL;Doc:Subject;Doc:Author;Doc:Created;Doc:PageCount;File:Size;
+ContentMetadata=File:Contents
+Mimes=text/html
+ShowServiceFiles=true
+ShowServiceDirectories=true
+
+
+
 [Images]
 DisplayName=Images
 Description=Image based files
Index: data/services/document.metadata
===================================================================
--- data/services/document.metadata	(revision 1092)
+++ data/services/document.metadata	(working copy)
@@ -53,3 +53,11 @@
 Description=Date document was created
 DataType=DateTime
 Parent=DC:Date
+
+[Doc:URL]
+DisplayName=URL
+Description=URL to this Doc
+DataType=Indexable
+Weight=20
+Filtered=false
+
