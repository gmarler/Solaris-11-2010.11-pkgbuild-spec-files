--- MPlayer-1.0rc2-orig/cpudetect.c	Sun Mar  8 14:39:05 2009
+++ MPlayer-1.0rc2/cpudetect.c	Sun Mar  8 14:40:06 2009
@@ -35,6 +35,8 @@
 
 #ifdef __AMIGAOS4__
 #include <proto/exec.h>
+#elif __sun
+#include <sys/utsname.h>
 #endif
 
 /* Thanks to the FreeBSD project for some of this cpuid code, and 
@@ -181,7 +183,7 @@
 #endif
 
 		/* FIXME: Does SSE2 need more OS support, too? */
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__CYGWIN__) || defined(__OpenBSD__) || defined(__DragonFly__) || defined(__APPLE__) || defined(__MINGW32__)
+#if defined(__linux__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__CYGWIN__) || defined(__OpenBSD__) || defined(__DragonFly__) || defined(__APPLE__) || defined(__MINGW32__) || defined(__sun)
 		if (caps->hasSSE)
 			check_os_katmai_support();
 		if (!caps->hasSSE)
@@ -337,6 +339,20 @@
 #ifdef ARCH_X86_64
    gCpuCaps.hasSSE=1;
    gCpuCaps.hasSSE2=1;
+#elif defined(__sun)
+   struct utsname solname;
+   long major, minor = 0;
+   char *radix;
+
+   if (uname(&solname) > 0) {
+      major = strtol(solname.release, &radix, 10);
+      if (*radix != '\0')
+         minor = strtol(++radix, NULL, 10);
+      if (!(major >= 5 && minor >= 9))
+         gCpuCaps.hasSSE=0;
+   } else {
+      gCpuCaps.hasSSE=0;
+   }
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__) || defined(__APPLE__)
    int has_sse=0, ret;
    size_t len=sizeof(has_sse);
