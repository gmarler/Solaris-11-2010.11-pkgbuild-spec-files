--- anjuta-head/libanjuta/Makefile.am	2007-04-03 22:24:30.564219000 +0800
+++ anjuta-head/libanjuta/Makefile.am.new	2007-04-03 22:24:48.957434000 +0800
@@ -3,6 +3,7 @@
 
 INCLUDES = \
 	$(WARN_CFLAGS) \
+	$(PLUGIN_GNOMEBUILD_CFLAGS) \
 	$(DEPRECATED_FLAGS) \
 	$(GNOME_UI_CFLAGS) \
 	$(GLADE_CFLAGS) \
@@ -19,6 +20,7 @@
 lib_LTLIBRARIES=libanjuta.la
 
 libanjuta_la_LIBADD = \
+	$(PLUGIN_GNOMEBUILD_LIBS) \
 	$(GNOME_UI_LIBS) \
 	$(GLADE_LIBS) \
 	$(top_builddir)/libegg/libanjuta-egg.la \
@@ -49,8 +51,6 @@
 	anjuta-serializer.c \
 	resources.c \
 	resources.h \
-	glue-plugin.c \
-	glue-factory.c \
 	glue-cpp.h \
 	glue-cpp.c \
 	cell-renderer-captioned-image.c	\
@@ -81,8 +81,6 @@
 	anjuta-session.h \
 	anjuta-save-prompt.h \
 	anjuta-serializer.h \
-	glue-plugin.h \
-	glue-factory.h \
 	resources.h
 
 libanjutainclude_HEADERS = \
Index: anjuta-trunk/src/Makefile.am
===================================================================
--- anjuta-trunk/src/Makefile.am	(revision 2903)
+++ anjuta-trunk/src/Makefile.am	(working copy)
@@ -12,6 +12,7 @@
 INCLUDES = \
 	$(GNOME_UI_CFLAGS)\
 	$(GDL_CFLAGS)\
+	$(PLUGIN_GNOMEBUILD_CFLAGS)\
 	-I$(top_srcdir)\
 	-I.. -I. -DPACKAGE_BIN_DIR=\"$(bindir)\" \
 	-DPACKAGE_DATA_DIR="\"$(datadir)/$(PACKAGE)\"" \
Index: anjuta-trunk/plugins/project-manager/Makefile.am
===================================================================
--- anjuta-trunk/plugins/project-manager/Makefile.am	(revision 2903)
+++ anjuta-trunk/plugins/project-manager/Makefile.am	(working copy)
@@ -17,7 +17,6 @@
 INCLUDES = \
 	$(WARN_CFLAGS) \
 	$(DEPRECATED_FLAGS) \
-	$(PLUGIN_GNOMEBUILD_CFLAGS) \
 	$(LIBANJUTA_CFLAGS)
 
 # Where to install the plugin
@@ -33,7 +32,6 @@
 
 # Plugin dependencies
 libanjuta_project_manager_la_LIBADD = \
-	$(PLUGIN_GNOMEBUILD_LIBS) \
 	$(LIBANJUTA_LIBS)
 
 EXTRA_DIST = \
Index: anjuta-trunk/plugins/project-import/Makefile.am
===================================================================
--- anjuta-trunk/plugins/project-import/Makefile.am	(revision 2903)
+++ anjuta-trunk/plugins/project-import/Makefile.am	(working copy)
@@ -20,11 +20,9 @@
 INCLUDES = \
 	$(WARN_CFLAGS) \
 	$(DEPRECATED_FLAGS) \
-	$(PLUGIN_GNOMEBUILD_CFLAGS) \
 	$(LIBANJUTA_CFLAGS)
 
 libanjuta_project_import_la_LIBADD = \
-	$(PLUGIN_GNOMEBUILD_LIBS) \
 	$(LIBANJUTA_LIBS)
 
 libanjuta_project_import_la_SOURCES= \
Index: anjuta-trunk/plugins/gdb/plugin.h
===================================================================
--- anjuta-trunk/plugins/gdb/plugin.h	(revision 2903)
+++ anjuta-trunk/plugins/gdb/plugin.h	(working copy)
@@ -22,7 +22,7 @@
 #define GDB_PLUGIN_H
 
 #include <glib.h>
-#include "libanjuta/glue-plugin.h"
+#include <gbf/glue-plugin.h>
 
 G_BEGIN_DECLS
 
Index: anjuta-trunk/libanjuta/glue-cpp.c
===================================================================
--- anjuta-trunk/libanjuta/glue-cpp.c	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-cpp.c	(working copy)
@@ -27,7 +27,6 @@
  */
 
 #include "glue-cpp.h"
-#include "glue-factory.h"
 
 #include <string.h>
 #include <gmodule.h>
Index: anjuta-trunk/libanjuta/glue-cpp.h
===================================================================
--- anjuta-trunk/libanjuta/glue-cpp.h	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-cpp.h	(working copy)
@@ -19,7 +19,7 @@
 #ifndef GLUE_CPP_H
 #define GLUE_CPP_H
 
-#include "glue-factory.h"
+#include <gbf/glue-factory.h>
 
 G_BEGIN_DECLS
 
Index: anjuta-trunk/libanjuta/anjuta-plugin.h
===================================================================
--- anjuta-trunk/libanjuta/anjuta-plugin.h	(revision 2912)
+++ anjuta-trunk/libanjuta/anjuta-plugin.h	(working copy)
@@ -30,7 +30,7 @@
 #include <libanjuta/anjuta-ui.h>
 #include <libanjuta/anjuta-preferences.h>
 #include <libanjuta/anjuta-utils.h>
-#include <libanjuta/glue-plugin.h>
+#include <gbf/glue-plugin.h>
 
 G_BEGIN_DECLS
 
Index: anjuta-trunk/libanjuta/anjuta-plugin-manager.c
===================================================================
--- anjuta-trunk/libanjuta/anjuta-plugin-manager.c	(revision 2903)
+++ anjuta-trunk/libanjuta/anjuta-plugin-manager.c	(working copy)
@@ -37,7 +37,7 @@
 #include <libanjuta/anjuta-debug.h>
 #include <libanjuta/anjuta-plugin-handle.h>
 #include <libanjuta/anjuta-plugin.h>
-#include <libanjuta/glue-factory.h>
+#include <gbf/glue-factory.h>
 #include <libanjuta/glue-cpp.h>
 
 enum
Index: anjuta-trunk/libanjuta/glue-plugin.c
===================================================================
--- anjuta-trunk/libanjuta/glue-plugin.c	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-plugin.c	(working copy)
@@ -1,115 +0,0 @@
-
-/**
- * SECTION:glue-plugin
- * @short_description: Glue plugin
- * @see_also: 
- * @stability: Unstable
- * @include: libanjuta/glue-plugin.h
- * 
- */
-
-#include "glue-plugin.h"
-
-static void glue_plugin_init       (GluePlugin *plugin);
-static void glue_plugin_class_init (GluePluginClass *class);
-
-typedef void (*GluePluginRegisterComponentsFunc) (GluePlugin *plugin);
-
-GType
-glue_plugin_get_type (void)
-{
-  static GType type = 0;
-
-  if (!type)
-    {
-      static const GTypeInfo type_info =
-      {
-        sizeof (GluePluginClass),
-        (GBaseInitFunc) NULL,
-        (GBaseFinalizeFunc) NULL,
-        (GClassInitFunc) glue_plugin_class_init,
-        (GClassFinalizeFunc) NULL,
-        NULL,
-        
-        sizeof (GluePlugin),
-        0, /* n_preallocs */
-        (GInstanceInitFunc) glue_plugin_init,
-      };
-
-      type = g_type_register_static (G_TYPE_TYPE_MODULE,
-				     "GluePlugin",
-				     &type_info, 0);
-    }
-  return type;
-}
-
-static gboolean
-glue_plugin_load (GTypeModule *module)
-{
-  GluePlugin *plugin = GLUE_PLUGIN (module);
-  GluePluginRegisterComponentsFunc func;
-
-  /* Check if we're already loaded */
-  if (plugin->module)
-    return TRUE;
-
-  /* Load the module and register the plugins */
-  plugin->module = g_module_open (plugin->path, 0);
-
-  if (!plugin->module)
-    {
-      g_warning ("could not load plugin: %s", g_module_error ());
-      return FALSE;
-    }
-  
-  if (!g_module_symbol (plugin->module, "glue_register_components", (gpointer *)&func))
-    {
-      g_warning ("could not load plugin: %s", g_module_error ());
-      g_module_close (plugin->module);
-      plugin->module = NULL;
-
-      return FALSE;
-    }
-  
-  (* func) (plugin);
-  return TRUE;
-}
-
-static void
-glue_plugin_unload (GTypeModule *module)
-{
-  GluePlugin *plugin = GLUE_PLUGIN (module);
-
-  if (!plugin->path)
-    plugin->path = g_strdup (g_module_name (plugin->module));
-  g_module_close (plugin->module);
-  plugin->module = NULL;
-}
-
-static void
-glue_plugin_class_init (GluePluginClass *class)
-{
-  GTypeModuleClass *type_module_class;
-
-  type_module_class = (GTypeModuleClass *)class;
-  
-  type_module_class->load = glue_plugin_load;
-  type_module_class->unload = glue_plugin_unload;
-}
-
-static void
-glue_plugin_init (GluePlugin *plugin)
-{
-}
-
-GluePlugin *
-glue_plugin_new (GModule *module)
-{
-  GluePlugin *plugin;
-
-  plugin = g_object_new (GLUE_TYPE_PLUGIN, NULL);
-
-  plugin->module = module;
-  
-  return plugin;
-}
Index: anjuta-trunk/libanjuta/glue-plugin.h
===================================================================
--- anjuta-trunk/libanjuta/glue-plugin.h	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-plugin.h	(working copy)
@@ -1,76 +0,0 @@
-#ifndef __GLUE_PLUGIN_H__
-#define __GLUE_PLUGIN_H__
-
-#include <glib-object.h>
-#include <gmodule.h>
-
-G_BEGIN_DECLS
-
-#define GLUE_TYPE_PLUGIN            (glue_plugin_get_type ())
-#define GLUE_PLUGIN(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GLUE_TYPE_PLUGIN, GluePlugin))
-#define GLUE_PLUGIN_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), GLUE_TYPE_PLUGIN, GluePluginClass))
-#define GLUE_IS_PLUGIN(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GLUE_TYPE_PLUGIN))
-#define GLUE_IS_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), GLUE_TYPE_PLUGIN))
-#define GLUE_PLUGIN_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS((obj), GLUE_TYPE_PLUGIN, GluePluginClass))
-
-typedef struct _GluePlugin      GluePlugin;
-typedef struct _GluePluginClass GluePluginClass;
-typedef struct _GluePluginComponent GluePluginComponent;
-
-typedef GType (* GluePluginComponentGetTypeFunc) (GluePlugin *plugin);
-
-struct _GluePlugin
-{
-  GTypeModule parent;
-  GModule *module;
-  char *path;
-};
-
-struct _GluePluginClass
-{
-  GTypeModuleClass parent_class;
-};
-
-struct _GluePluginComponent
-{
-  const gchar *name;
-  GluePluginComponentGetTypeFunc get_type_func;
-};
-
-GType       glue_plugin_get_type      (void);
-GluePlugin *glue_plugin_new           (GModule *module);
-
-#define GLUE_PLUGIN_MODULE(components) \
-GLUE_REGISTER_COMPONENTS(components) \
-GLUE_GET_COMPONENT_TYPE(components)
-
-#define GLUE_REGISTER_COMPONENTS(components) 	\
-G_MODULE_EXPORT void				\
-glue_register_components (GluePlugin *plugin)	\
-{						\
-  int i;					\
-						\
-  for (i = 0; components[i].name != NULL; i++)	\
-    {						\
-      (* components[i].get_type_func) (plugin);	\
-    }						\
-}
-
-#define GLUE_GET_COMPONENT_TYPE(components)	\
-G_MODULE_EXPORT GType \
-glue_get_component_type (GluePlugin *plugin, const char *name) \
-{ \
-  int i; \
-\
-  for (i = 0; components[i].name != NULL; i++) \
-    { \
-      if (strcmp (name, components[i].name) == 0) \
-	return (* components[i].get_type_func) (plugin); \
-    } \
-\
-  return G_TYPE_INVALID; \
-} 
-
-G_END_DECLS
-
-#endif /* __GLUE_PLUGIN_H__ */
Index: anjuta-trunk/libanjuta/glue-factory.c
===================================================================
--- anjuta-trunk/libanjuta/glue-factory.c	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-factory.c	(working copy)
@@ -1,246 +0,0 @@
-
-/**
- * SECTION:glue-factory
- * @short_description: Underlying plugin factory
- * @see_also: 
- * @stability: Unstable
- * @include: libanjuta/glue-factory.h
- * 
- */
-
-#include <string.h>
-#include <gmodule.h>
-#include "glue-factory.h"
-#include "glue-plugin.h"
-
-static void glue_factory_init       (GlueFactory *factory);
-static void glue_factory_class_init (GlueFactoryClass *class);
-
-typedef GType (*GluePluginGetTypeFunc) (GluePlugin *plugin, const char *name);
-
-typedef struct
-{
-  GluePlugin *plugin;
-  GluePluginGetTypeFunc get_type_func;
-  const gchar *name;
-} LoadedPlugin;
-
-struct _GlueFactory
-{
-  GObject parent;
-  
-  GList *paths;
-};
-
-struct _GlueFactoryClass
-{
-  GObjectClass parent_class;
-};
-
-GType
-glue_factory_get_type (void)
-{
-  static GType type = 0;
-
-  if (!type)
-    {
-      static const GTypeInfo type_info =
-      {
-        sizeof (GlueFactoryClass),
-        (GBaseInitFunc) NULL,
-        (GBaseFinalizeFunc) NULL,
-        (GClassInitFunc) glue_factory_class_init,
-        (GClassFinalizeFunc) NULL,
-        NULL,
-        
-        sizeof (GlueFactory),
-        0, /* n_preallocs */
-        (GInstanceInitFunc) glue_factory_init,
-      };
-
-      type = g_type_register_static (G_TYPE_OBJECT,
-				     "GlueFactory",
-				     &type_info, 0);
-    }
-  return type;
-}
-
-static void
-glue_factory_class_init (GlueFactoryClass *class)
-{
-}
-
-static void
-glue_factory_init (GlueFactory *factory)
-{
-}
-
-GlueFactory *
-glue_factory_new (void)
-{
-  GlueFactory *factory;
-
-  factory = g_object_new (glue_factory_get_type (), NULL);
-
-  return factory;
-}
-
-gboolean
-glue_factory_add_path (GlueFactory *factory, const gchar *path)
-{
-  GList *p;
-  PathEntry *entry;
-  
-  if (!g_file_test (path, G_FILE_TEST_EXISTS | G_FILE_TEST_IS_DIR))
-    return FALSE;
-
-  /* Check if the path has been added */
-  p = factory->paths;
-
-  while (p)
-    {
-      PathEntry *entry = p->data;
-
-      /* If it's already added we return TRUE */
-      if (strcmp (path, entry->path) == 0)
-	return TRUE;
-      
-      p = p->next;
-    }
-
-  entry = g_new (PathEntry, 1);
-  entry->path = g_strdup (path);
-  entry->loaded_plugins = g_hash_table_new (NULL, NULL);
-  
-  factory->paths = g_list_prepend (factory->paths, entry);
-    
-  return TRUE;
-}
-
-GList* glue_factory_get_path(GlueFactory *factory)
-{
-	return factory->paths;
-}
-
-static LoadedPlugin *
-get_already_loaded_module (GlueFactory *factory,
-			   const gchar *component_name,
-			   const gchar *type_name)
-{
-  GList *p;
-
-  p = factory->paths;
-  while (p)
-    {
-      PathEntry *entry = p->data;
-      LoadedPlugin *plugin;
-
-      plugin = g_hash_table_lookup (entry->loaded_plugins, component_name);
-
-      if (plugin && (* plugin->get_type_func) (plugin->plugin, type_name) != G_TYPE_INVALID)
-	return plugin;
-      
-      p = p->next;
-    }
-
-  return NULL;
-}
-
-static LoadedPlugin *
-load_plugin (GlueFactory *factory, const gchar *component_name, const gchar *type_name)
-{
-  GList *p;
-  gchar *plugin_name;
-  
-  p = factory->paths;
-  plugin_name = g_module_build_path (NULL, component_name);
-  
-  while (p)
-    {
-      const gchar *file_name;
-      PathEntry *entry = p->data;
-      GDir *dir;
-      
-      dir = g_dir_open (entry->path, 0, NULL);
-
-      if (dir == NULL)
-	continue;
-      
-      do {
-	file_name = g_dir_read_name (dir);
-	
-	if (file_name && strcmp (file_name, plugin_name) == 0) {
-	  GModule *module;
-	  GluePlugin *glue_plugin;
-	  gchar *plugin_path;
-	  GluePluginGetTypeFunc get_type_func;
-	  LoadedPlugin *plugin;
-	  
-	  /* We have found a matching module */
-	  plugin_path = g_module_build_path (entry->path, plugin_name);
-	  module = g_module_open (plugin_path, 0);
-	  if (module == NULL)
-	    {
-	      g_warning ("Could not open module: %s\n", g_module_error ());
-	      goto move_to_next_dir;
-	    }
-
-	  if (!g_module_symbol (module, "glue_get_component_type", (gpointer *)&get_type_func))
-	    {
-	      g_module_close (module);
-	      goto move_to_next_dir;
-	    }
-
-	  /* Now create a new glue plugin */
-	  glue_plugin = glue_plugin_new (module);
-	  if ((* get_type_func) (glue_plugin, type_name) == G_TYPE_INVALID)
-	    {
-	      g_object_unref (glue_plugin);
-	      g_module_close (module);
-	      goto move_to_next_dir;
-	    }
-	  
-	  /* Everything seems to be in order */
-	  plugin = g_new (LoadedPlugin, 1);
-	  plugin->plugin = glue_plugin;
-	  plugin->get_type_func = get_type_func;
-	  plugin->name = g_strdup (component_name);
-	  g_type_module_set_name (G_TYPE_MODULE (plugin->plugin), plugin->name);
-	  g_hash_table_insert (entry->loaded_plugins, (gpointer)plugin->name, plugin);
-	  
-	  g_dir_close (dir);
-	  g_free (plugin_name);
-	  return plugin;
-
-	}
-	
-      } while (file_name != NULL);
-      
-move_to_next_dir:	  
-      g_dir_close (dir);
-      
-      p = p->next;
-    }
-
-  g_free (plugin_name);
-  return NULL;
-}
-
-GType
-glue_factory_get_object_type (GlueFactory  *factory,
-			      const gchar  *component_name,
-			      const gchar  *type_name)
-{
-  LoadedPlugin *plugin;
-
-  plugin = get_already_loaded_module (factory, component_name, type_name);
-  
-  if (!plugin)
-    plugin = load_plugin (factory, component_name, type_name);
-
-  if (plugin) {
-    return (* plugin->get_type_func) (plugin->plugin, type_name);
-  }
-  else
-    return G_TYPE_INVALID;
-}
Index: anjuta-trunk/libanjuta/glue-factory.h
===================================================================
--- anjuta-trunk/libanjuta/glue-factory.h	(revision 2903)
+++ anjuta-trunk/libanjuta/glue-factory.h	(working copy)
@@ -1,39 +0,0 @@
-#ifndef __GLUE_FACTORY_H__
-#define __GLUE_FACTORY_H__
-
-#include <glib-object.h>
-
-G_BEGIN_DECLS
-
-#define GLUE_TYPE_FACTORY            (glue_factory_get_type ())
-#define GLUE_FACTORY(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GLUE_TYPE_FACTORY, GlueFactory))
-#define GLUE_FACTORY_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), GLUE_TYPE_FACTORY, GlueFactoryClass))
-#define GLUE_IS_FACTORY(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GLUE_TYPE_FACTORY))
-#define GLUE_IS_FACTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), GLUE_TYPE_FACTORY))
-#define GLUE_FACTORY_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS((obj), GLUE_TYPE_FACTORY, GlueFactoryClass))
-
-typedef struct
-{
-  const gchar *path;
-  GHashTable *loaded_plugins;
-} PathEntry;
-
-typedef struct _GlueFactory      GlueFactory;
-typedef struct _GlueFactoryClass GlueFactoryClass;
-
-GType        glue_factory_get_type        (void);
-GlueFactory *glue_factory_new             (void);
-gboolean     glue_factory_add_path        (GlueFactory  *factory,
-					   const char   *path);
-GType        glue_factory_get_object_type (GlueFactory  *factory,
-					   const gchar  *component_name,
-					   const gchar  *type_name);
-
-GObject     *glue_factory_create_object   (GlueFactory  *factory,
-					   const gchar  *component_name,
-					   const gchar  *type_name,
-					   ...);
-GList*			glue_factory_get_path (GlueFactory *factory);
-					   
-G_END_DECLS
-#endif /* __GLUE_FACTORY_H__ */
Index: anjuta-trunk/configure.in
===================================================================
--- anjuta-trunk/configure.in	(revision 2903)
+++ anjuta-trunk/configure.in	(working copy)
@@ -538,7 +538,7 @@
 
 dnl Setup Anjuta Library flags
 dnl --------------------------
-LIBANJUTA_CFLAGS='$(GNOME_UI_CFLAGS) $(GLADE_CFLAGS) -I$(top_srcdir) -DPACKAGE_PIXMAPS_DIR=\""$(datadir)/pixmaps/$(PACKAGE)\"" -DPACKAGE_DATA_DIR=\""$(datadir)/$(PACKAGE)"\"'
+LIBANJUTA_CFLAGS='$(GNOME_UI_CFLAGS) $(GLADE_CFLAGS) $(PLUGIN_GNOMEBUILD_CFLAGS) -I$(top_srcdir) -DPACKAGE_PIXMAPS_DIR=\""$(datadir)/pixmaps/$(PACKAGE)\"" -DPACKAGE_DATA_DIR=\""$(datadir)/$(PACKAGE)"\"'
 LIBANJUTA_LIBS='$(top_builddir)/libanjuta/libanjuta.la'
 AC_SUBST(LIBANJUTA_CFLAGS)
 AC_SUBST(LIBANJUTA_LIBS)
