--- ruby-1.8.4/missing/isinf.c.orig	2006-07-02 20:26:22.785045000 -0400
+++ ruby-1.8.4/missing/isinf.c	2006-07-02 20:26:44.069417000 -0400
@@ -29,8 +29,7 @@
 #endif
 
 int
-isinf(n)
-    double n;
+isinf(double n)
 {
     return (!finite(n) && !isnan(n));
 }
--- ruby-1.8.5/configure.in.orig	2006-08-30 15:53:23.470829000 +0800
+++ ruby-1.8.5/configure.in	2006-08-30 15:55:07.805952000 +0800
@@ -482,7 +482,7 @@
 AC_CHECK_FUNCS(ftello)
 AC_REPLACE_FUNCS(dup2 memmove strcasecmp strncasecmp strerror strftime\
 		 strchr strstr strtoul crypt flock vsnprintf\
-		 isnan finite isinf hypot acosh erf)
+		 hypot acosh erf)
 AC_CHECK_FUNCS(fmod killpg wait4 waitpid syscall chroot fsync getcwd eaccess\
 	      truncate chsize times utimes fcntl lockf lstat symlink link\
 	      readlink setitimer setruid seteuid setreuid setresuid\
--- ruby-1.8.4/missing.h.orig	2005-06-12 12:58:41.000000000 -0400
+++ ruby-1.8.4/missing.h	2006-07-02 21:32:49.268361000 -0400
@@ -12,6 +12,10 @@
 #ifndef MISSING_H
 #define MISSING_H
 
+#ifdef HAVE_IEEEFP_H
+# include <ieeefp.h>
+#endif
+
 #if defined(HAVE_SYS_TIME_H)
 #  include <sys/time.h>
 #elif !defined(_WIN32)
@@ -39,9 +43,11 @@
 extern int dup2 _((int, int));
 #endif
 
+/*
 #ifndef HAVE_FINITE
 extern int finite _((double));
 #endif
+*/
 
 #ifndef HAVE_FLOCK
 extern int flock _((int, int));
@@ -62,6 +68,7 @@
 extern double erfc _((double));
 #endif
 
+/*
 #ifndef HAVE_ISINF
 # if defined(HAVE_FINITE) && defined(HAVE_ISNAN)
 # define isinf(x) (!finite(x) && !isnan(x))
@@ -69,10 +76,13 @@
 extern int isinf _((double));
 # endif
 #endif
+*/
 
+/*
 #ifndef HAVE_ISNAN
 extern int isnan _((double));
 #endif
+*/
 
 /*
 #ifndef HAVE_MEMCMP
@@ -135,4 +145,28 @@
 extern int vsnprintf _((char *, size_t n, char const *, va_list));
 #endif
 
+#ifndef isnan
+# define isnan(x) \
+    (sizeof (x) == sizeof (long double) ? isnan_ld (x) \
+     : sizeof (x) == sizeof (double) ? isnan_d (x) \
+     : isnan_f (x))
+static inline int isnan_f  (float       x) { return x != x; }
+static inline int isnan_d  (double      x) { return x != x; }
+static inline int isnan_ld (long double x) { return x != x; }
+#endif
+
+#ifndef isinf
+# define isinf(x) \
+    (sizeof (x) == sizeof (long double) ? isinf_ld (x) \
+     : sizeof (x) == sizeof (double) ? isinf_d (x) \
+     : isinf_f (x))
+static inline int isinf_f  (float       x) { return isnan (x - x); }
+static inline int isinf_d  (double      x) { return isnan (x - x); }
+static inline int isinf_ld (long double x) { return isnan (x - x); }
+#endif
+
+#ifndef finite
+# define finite(x) (!isnan(x) && !isinf(x))
+#endif
+
 #endif /* MISSING_H */
