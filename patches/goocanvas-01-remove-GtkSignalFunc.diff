Index: goocanvas-trunk/demo/demo-animation.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-animation.c,v
retrieving revision 1.2
diff -u -r1.2 demo-animation.c
--- goocanvas-trunk/demo/demo-animation.c	19 Feb 2007 11:43:36 -0000	1.2
+++ goocanvas-trunk/demo/demo-animation.c	1 Sep 2008 09:04:38 -0000
@@ -107,13 +107,13 @@
   w = gtk_button_new_with_label("Start Animation");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) start_animation_clicked,
+  g_signal_connect (w, "clicked", G_CALLBACK (start_animation_clicked),
 		    NULL);
 
   w = gtk_button_new_with_label("Stop Animation");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) stop_animation_clicked,
+  g_signal_connect (w, "clicked", G_CALLBACK (stop_animation_clicked),
 		    NULL);
 
 
Index: goocanvas-trunk/demo/demo-arrowhead.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-arrowhead.c,v
retrieving revision 1.2
diff -u -r1.2 demo-arrowhead.c
--- goocanvas-trunk/demo/demo-arrowhead.c	29 Nov 2006 18:47:02 -0000	1.2
+++ goocanvas-trunk/demo/demo-arrowhead.c	1 Sep 2008 09:04:38 -0000
@@ -385,19 +385,19 @@
   g_object_set_data (G_OBJECT (canvas), box_name, item);
 
   g_signal_connect (item, "enter_notify_event",
-		    (GtkSignalFunc) on_enter_notify,
+		    G_CALLBACK (on_enter_notify),
 		    NULL);
   g_signal_connect (item, "leave_notify_event",
-		    (GtkSignalFunc) on_leave_notify,
+		    G_CALLBACK (on_leave_notify),
 		    NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press,
+		    G_CALLBACK (on_button_press),
 		    NULL);
   g_signal_connect (item, "button_release_event",
-		    (GtkSignalFunc) on_button_release,
+		    G_CALLBACK (on_button_release),
 		    NULL);
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion,
+		    G_CALLBACK (on_motion),
 		    NULL);
 }
 
Index: goocanvas-trunk/demo/demo-clipping.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-clipping.c,v
retrieving revision 1.2
diff -u -r1.2 demo-clipping.c
--- goocanvas-trunk/demo/demo-clipping.c	6 Mar 2007 12:08:15 -0000	1.2
+++ goocanvas-trunk/demo/demo-clipping.c	1 Sep 2008 09:04:38 -0000
@@ -31,25 +31,25 @@
   goo_canvas_item_translate (item, 100, 100);
   goo_canvas_item_rotate (item, 30, 0, 0);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse (unclipped)");
+		    G_CALLBACK (on_button_press), "Blue ellipse (unclipped)");
 
   item = goo_canvas_rect_new (root, 200, 50, 100, 100,
 			      "fill-color", "red",
 			      "clip-fill-rule", CAIRO_FILL_RULE_EVEN_ODD,
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle (unclipped)");
+		    G_CALLBACK (on_button_press), "Red rectangle (unclipped)");
 
   item = goo_canvas_rect_new (root, 380, 50, 100, 100,
 			      "fill-color", "yellow",
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle (unclipped)");
+		    G_CALLBACK (on_button_press), "Yellow rectangle (unclipped)");
 
   item = goo_canvas_text_new (root, "Sample Text", 520, 100, -1, GTK_ANCHOR_NW,
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text (unclipped)");
+		    G_CALLBACK (on_button_press), "Text (unclipped)");
 
 
 
@@ -61,7 +61,7 @@
   goo_canvas_item_translate (item, 100, 300);
   goo_canvas_item_rotate (item, 30, 0, 0);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse");
+		    G_CALLBACK (on_button_press), "Blue ellipse");
 
   item = goo_canvas_rect_new (root, 200, 250, 100, 100,
 			      "fill-color", "red",
@@ -69,20 +69,20 @@
 			      "clip-fill-rule", CAIRO_FILL_RULE_EVEN_ODD,
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle");
+		    G_CALLBACK (on_button_press), "Red rectangle");
 
   item = goo_canvas_rect_new (root, 380, 250, 100, 100,
 			      "fill-color", "yellow",
 			      "clip-path", "M480,230 l40,100 l-80 0 z",
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle");
+		    G_CALLBACK (on_button_press), "Yellow rectangle");
 
   item = goo_canvas_text_new (root, "Sample Text", 520, 300, -1, GTK_ANCHOR_NW,
 			      "clip-path", "M535,300 h75 v40 h-75 z",
 			      NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text");
+		    G_CALLBACK (on_button_press), "Text");
 
 
   /* Table with clipped items. */
@@ -97,7 +97,7 @@
   goo_canvas_item_translate (item, 100, 300);
   goo_canvas_item_rotate (item, 30, 0, 0);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse");
+		    G_CALLBACK (on_button_press), "Blue ellipse");
 
   item = goo_canvas_rect_new (table, 200, 250, 100, 100,
 			      "fill-color", "red",
@@ -108,7 +108,7 @@
 					"column", 1,
 					NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle");
+		    G_CALLBACK (on_button_press), "Red rectangle");
 
   item = goo_canvas_rect_new (table, 380, 250, 100, 100,
 			      "fill-color", "yellow",
@@ -118,7 +118,7 @@
 					"column", 2,
 					NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle");
+		    G_CALLBACK (on_button_press), "Yellow rectangle");
 
   item = goo_canvas_text_new (table, "Sample Text", 520, 300, -1,
 			      GTK_ANCHOR_NW,
@@ -128,7 +128,7 @@
 					"column", 3,
 					NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text");
+		    G_CALLBACK (on_button_press), "Text");
 }
 
 
Index: goocanvas-trunk/demo/demo-events.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-events.c,v
retrieving revision 1.3
diff -u -r1.3 demo-events.c
--- goocanvas-trunk/demo/demo-events.c	29 Nov 2006 18:47:02 -0000	1.3
+++ goocanvas-trunk/demo/demo-events.c	1 Sep 2008 09:04:38 -0000
@@ -26,7 +26,7 @@
 setup_item_signals (GooCanvasItem *item)
 {
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 }
 
 
Index: goocanvas-trunk/demo/demo-features.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-features.c,v
retrieving revision 1.4
diff -u -r1.4 demo-features.c
--- goocanvas-trunk/demo/demo-features.c	14 May 2007 09:51:25 -0000	1.4
+++ goocanvas-trunk/demo/demo-features.c	1 Sep 2008 09:04:38 -0000
@@ -108,7 +108,7 @@
 	g_object_set_data (G_OBJECT (item), "parent1", parent1);
 	g_object_set_data (G_OBJECT (item), "parent2", parent2);
 	g_signal_connect (item, "button_press_event",
-			  (GtkSignalFunc) on_button_press, NULL);
+			  G_CALLBACK (on_button_press), NULL);
 
 	/* A group to be reparented */
 
@@ -127,7 +127,7 @@
 	g_object_set_data (G_OBJECT (group), "parent1", parent1);
 	g_object_set_data (G_OBJECT (group), "parent2", parent2);
 	g_signal_connect (group, "button_press_event",
-			  (GtkSignalFunc) on_button_press, NULL);
+			  G_CALLBACK (on_button_press), NULL);
 
 	return vbox;
 }
Index: goocanvas-trunk/demo/demo-fifteen.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-fifteen.c,v
retrieving revision 1.4
diff -u -r1.4 demo-fifteen.c
--- goocanvas-trunk/demo/demo-fifteen.c	20 Jun 2007 12:59:48 -0000	1.4
+++ goocanvas-trunk/demo/demo-fifteen.c	1 Sep 2008 09:04:38 -0000
@@ -166,13 +166,13 @@
 setup_item_signals (GooCanvasItem     *item)
 {
   g_signal_connect (item, "enter_notify_event",
-		    (GtkSignalFunc) piece_enter_notify,
+		    G_CALLBACK (piece_enter_notify),
 		    NULL);
   g_signal_connect (item, "leave_notify_event",
-		    (GtkSignalFunc) piece_leave_notify,
+		    G_CALLBACK (piece_leave_notify),
 		    NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) piece_button_press,
+		    G_CALLBACK (piece_button_press),
 		    NULL);
 }
 
@@ -277,7 +277,7 @@
 	board = g_new (GooCanvasItem *, 16);
 	g_object_set_data (G_OBJECT (canvas), "board", board);
 	g_signal_connect (canvas, "destroy",
-			  (GtkSignalFunc) free_stuff,
+			  G_CALLBACK (free_stuff),
 			  board);
 
 	for (i = 0; i < 15; i++) {
@@ -320,7 +320,7 @@
 	gtk_box_pack_start (GTK_BOX (vbox), button, FALSE, FALSE, 0);
 	g_object_set_data (G_OBJECT (button), "board", board);
 	g_signal_connect (button, "clicked",
-			  (GtkSignalFunc) scramble,
+			  G_CALLBACK (scramble),
 			  canvas);
 	gtk_widget_show (button);
 
Index: goocanvas-trunk/demo/demo-focus.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-focus.c,v
retrieving revision 1.3
diff -u -r1.3 demo-focus.c
--- goocanvas-trunk/demo/demo-focus.c	29 Nov 2006 18:47:02 -0000	1.3
+++ goocanvas-trunk/demo/demo-focus.c	1 Sep 2008 09:04:38 -0000
@@ -100,15 +100,15 @@
   g_object_set_data (G_OBJECT (item), "id", color);
 
   g_signal_connect (item, "focus_in_event",
-		    (GtkSignalFunc) on_focus_in, NULL);
+		    G_CALLBACK (on_focus_in), NULL);
   g_signal_connect (item, "focus_out_event",
-		    (GtkSignalFunc) on_focus_out, NULL);
+		    G_CALLBACK (on_focus_out), NULL);
 
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   g_signal_connect (item, "key_press_event",
-		    (GtkSignalFunc) on_key_press, NULL);
+		    G_CALLBACK (on_key_press), NULL);
 }
 
 
Index: goocanvas-trunk/demo/demo-grabs.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-grabs.c,v
retrieving revision 1.2
diff -u -r1.2 demo-grabs.c
--- goocanvas-trunk/demo/demo-grabs.c	29 Nov 2006 18:47:02 -0000	1.2
+++ goocanvas-trunk/demo/demo-grabs.c	1 Sep 2008 09:04:38 -0000
@@ -231,18 +231,18 @@
 
   view_id = g_strdup_printf ("%s-background", id);
   g_signal_connect (fixed, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (fixed, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (fixed, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (fixed, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (fixed, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (fixed, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 
 
   drawing_area = gtk_drawing_area_new ();
@@ -264,18 +264,18 @@
 
   view_id = g_strdup_printf ("%s-left", id);
   g_signal_connect (drawing_area, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (drawing_area, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (drawing_area, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (drawing_area, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (drawing_area, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (drawing_area, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 
 
   drawing_area = gtk_drawing_area_new ();
@@ -297,18 +297,18 @@
 
   view_id = g_strdup_printf ("%s-right", id);
   g_signal_connect (drawing_area, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (drawing_area, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (drawing_area, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (drawing_area, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (drawing_area, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (drawing_area, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 }
 
 
@@ -316,15 +316,15 @@
 setup_item_signals (GooCanvasItem *item)
 {
   g_signal_connect (item, "enter_notify_event",
-		    (GtkSignalFunc) on_enter_notify, NULL);
+		    G_CALLBACK (on_enter_notify), NULL);
   g_signal_connect (item, "leave_notify_event",
-		    (GtkSignalFunc) on_leave_notify, NULL);
+		    G_CALLBACK (on_leave_notify), NULL);
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
   g_signal_connect (item, "button_release_event",
-		    (GtkSignalFunc) on_button_release, NULL);
+		    G_CALLBACK (on_button_release), NULL);
 }
 
 
Index: goocanvas-trunk/demo/demo-large-items.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-large-items.c,v
retrieving revision 1.1
diff -u -r1.1 demo-large-items.c
--- goocanvas-trunk/demo/demo-large-items.c	11 May 2007 16:30:47 -0000	1.1
+++ goocanvas-trunk/demo/demo-large-items.c	1 Sep 2008 09:04:38 -0000
@@ -96,7 +96,7 @@
   root = goo_canvas_get_root_item (GOO_CANVAS (canvas));
 
   g_signal_connect (root, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 
 #if 1
   item = goo_demo_large_rect_new (root, CANVAS_LEFT + 10, CANVAS_TOP + 10,
@@ -146,7 +146,7 @@
   adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 10.00, 0.05, 0.50, 0.50));
   w = gtk_spin_button_new (adj, 0.0, 2);
   g_signal_connect (adj, "value_changed",
-		    (GtkSignalFunc) zoom_changed,
+		    G_CALLBACK (zoom_changed),
 		    canvas);
   gtk_widget_set_size_request (w, 50, -1);
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
Index: goocanvas-trunk/demo/demo-paths.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-paths.c,v
retrieving revision 1.4
diff -u -r1.4 demo-paths.c
--- goocanvas-trunk/demo/demo-paths.c	13 May 2007 11:43:04 -0000	1.4
+++ goocanvas-trunk/demo/demo-paths.c	1 Sep 2008 09:04:38 -0000
@@ -151,7 +151,7 @@
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
   g_signal_connect (w, "clicked",
-		    (GtkSignalFunc) move_path_clicked, canvas);
+		    G_CALLBACK (move_path_clicked), canvas);
 
   return vbox;
 }
Index: goocanvas-trunk/demo/demo-table.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo-table.c,v
retrieving revision 1.4
diff -u -r1.4 demo-table.c
--- goocanvas-trunk/demo/demo-table.c	18 Nov 2007 13:57:40 -0000	1.4
+++ goocanvas-trunk/demo/demo-table.c	1 Sep 2008 09:04:38 -0000
@@ -81,7 +81,7 @@
 
   g_object_set_data (G_OBJECT (item), "id", text);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 }
 
 
@@ -182,7 +182,7 @@
 					NULL);
   g_object_set_data (G_OBJECT (square), "id", "Red square");
   g_signal_connect (square, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   circle = goo_canvas_ellipse_new (table, 0.0, 0.0, 25.0, 25.0,
 				   "fill-color", "blue",
@@ -194,7 +194,7 @@
 					NULL);
   g_object_set_data (G_OBJECT (circle), "id", "Blue circle");
   g_signal_connect (circle, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   triangle = goo_canvas_polyline_new (table, TRUE, 3,
 				      25.0, 0.0, 0.0, 50.0, 50.0, 50.0,
@@ -207,7 +207,7 @@
 					NULL);
   g_object_set_data (G_OBJECT (triangle), "id", "Yellow triangle");
   g_signal_connect (triangle, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 }
 
 
@@ -253,7 +253,7 @@
 					NULL);
   g_object_set_data (G_OBJECT (item), "id", "Text Item");
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 #endif
 
   item = goo_canvas_rect_new (table, 0.0, 0.0, width - 2, 10.0,
Index: goocanvas-trunk/demo/demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/demo.c,v
retrieving revision 1.33
diff -u -r1.33 demo.c
--- goocanvas-trunk/demo/demo.c	27 Mar 2008 14:08:54 -0000	1.33
+++ goocanvas-trunk/demo/demo.c	1 Sep 2008 09:04:38 -0000
@@ -428,11 +428,11 @@
 setup_item_signals (GooCanvasItem *item)
 {
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
   g_signal_connect (item, "button_release_event",
-		    (GtkSignalFunc) on_button_release, NULL);
+		    G_CALLBACK (on_button_release), NULL);
 }
 
 
@@ -478,7 +478,7 @@
 	adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 50.00, 0.05, 0.50, 0.50));
 	w = gtk_spin_button_new (adj, 0.0, 2);
 	g_signal_connect (adj, "value_changed",
-			  (GtkSignalFunc) zoom_changed,
+			  G_CALLBACK (zoom_changed),
 			  canvas);
 	gtk_widget_set_size_request (w, 50, -1);
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
@@ -492,7 +492,7 @@
 	adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 50.00, 0.05, 0.50, 0.50));
 	w = gtk_spin_button_new (adj, 0.0, 2);
 	g_signal_connect (adj, "value_changed",
-			  (GtkSignalFunc) zoom_x_changed,
+			  G_CALLBACK (zoom_x_changed),
 			  canvas);
 	gtk_widget_set_size_request (w, 50, -1);
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
@@ -506,7 +506,7 @@
 	adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 50.00, 0.05, 0.50, 0.50));
 	w = gtk_spin_button_new (adj, 0.0, 2);
 	g_signal_connect (adj, "value_changed",
-			  (GtkSignalFunc) zoom_y_changed,
+			  G_CALLBACK (zoom_y_changed),
 			  canvas);
 	gtk_widget_set_size_request (w, 50, -1);
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
@@ -523,7 +523,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	/*gtk_widget_show (w);*/
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) center_toggled,
+			  G_CALLBACK (center_toggled),
 			  canvas);
 
 	/* Move Ellipse */
@@ -532,7 +532,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) move_ellipse_clicked,
+			  G_CALLBACK (move_ellipse_clicked),
 			  canvas);
 
 	/* Animate Ellipse */
@@ -541,7 +541,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) animate_ellipse_clicked,
+			  G_CALLBACK (animate_ellipse_clicked),
 			  canvas);
 	
 	/* Stop Animation */
@@ -550,7 +550,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) stop_animation_clicked,
+			  G_CALLBACK (stop_animation_clicked),
 			  canvas);
 	
 
@@ -561,7 +561,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) write_pdf_clicked,
+			  G_CALLBACK (write_pdf_clicked),
 			  canvas);
 #endif
 
@@ -569,7 +569,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) change_bounds_clicked,
+			  G_CALLBACK (change_bounds_clicked),
 			  canvas);
 
 	hbox = gtk_hbox_new (FALSE, 4);
@@ -586,21 +586,21 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_50_50_clicked,
+			  G_CALLBACK (scroll_to_50_50_clicked),
 			  canvas);
 
 	w = gtk_button_new_with_label("250,250");
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_250_250_clicked,
+			  G_CALLBACK (scroll_to_250_250_clicked),
 			  canvas);
 
 	w = gtk_button_new_with_label("500,500");
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_500_500_clicked,
+			  G_CALLBACK (scroll_to_500_500_clicked),
 			  canvas);
 
 	/* Scroll anchor */
@@ -614,7 +614,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_NW));
@@ -624,7 +624,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_N));
@@ -634,7 +634,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_NE));
@@ -644,7 +644,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_W));
@@ -654,7 +654,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_CENTER));
@@ -664,7 +664,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_E));
@@ -674,7 +674,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_SW));
@@ -684,7 +684,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_S));
@@ -694,7 +694,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_SE));
@@ -714,7 +714,7 @@
 
 #if 0
 	g_signal_connect_after (canvas, "key_press_event",
-				(GtkSignalFunc) key_press,
+				G_CALLBACK (key_press),
 				NULL);
 
 	GTK_WIDGET_SET_FLAGS (canvas, GTK_CAN_FOCUS);
@@ -1404,7 +1404,7 @@
 
   root = goo_canvas_get_root_item (canvas);
   g_signal_connect (root, "button_press_event",
-		    (GtkSignalFunc) on_background_button_press, NULL);
+		    G_CALLBACK (on_background_button_press), NULL);
 
   /* Setup canvas items */
 #if 1
@@ -1441,7 +1441,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   notebook = gtk_notebook_new ();
Index: goocanvas-trunk/demo/mv-demo-animation.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-animation.c,v
retrieving revision 1.2
diff -u -r1.2 mv-demo-animation.c
--- goocanvas-trunk/demo/mv-demo-animation.c	19 Feb 2007 11:43:36 -0000	1.2
+++ goocanvas-trunk/demo/mv-demo-animation.c	1 Sep 2008 09:04:38 -0000
@@ -112,13 +112,13 @@
   w = gtk_button_new_with_label("Start Animation");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) start_animation_clicked,
+  g_signal_connect (w, "clicked", G_CALLBACK (start_animation_clicked),
 		    NULL);
 
   w = gtk_button_new_with_label("Stop Animation");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) stop_animation_clicked,
+  g_signal_connect (w, "clicked", G_CALLBACK (stop_animation_clicked),
 		    NULL);
 
 
Index: goocanvas-trunk/demo/mv-demo-arrowhead.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-arrowhead.c,v
retrieving revision 1.1
diff -u -r1.1 mv-demo-arrowhead.c
--- goocanvas-trunk/demo/mv-demo-arrowhead.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-demo-arrowhead.c	1 Sep 2008 09:04:38 -0000
@@ -399,19 +399,19 @@
   if (GOO_IS_CANVAS_RECT_MODEL (model))
     {
       g_signal_connect (item, "enter_notify_event",
-			(GtkSignalFunc) on_enter_notify,
+			G_CALLBACK (on_enter_notify),
 			NULL);
       g_signal_connect (item, "leave_notify_event",
-			(GtkSignalFunc) on_leave_notify,
+			G_CALLBACK (on_leave_notify),
 			NULL);
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_button_press,
+			G_CALLBACK (on_button_press),
 			NULL);
       g_signal_connect (item, "button_release_event",
-			(GtkSignalFunc) on_button_release,
+			G_CALLBACK (on_button_release),
 			NULL);
       g_signal_connect (item, "motion_notify_event",
-			(GtkSignalFunc) on_motion,
+			G_CALLBACK (on_motion),
 			NULL);
     }
 }
@@ -448,7 +448,7 @@
 	canvas = goo_canvas_new ();
 
 	g_signal_connect (canvas, "item_created",
-			  (GtkSignalFunc) on_item_created, NULL);
+			  G_CALLBACK (on_item_created), NULL);
 
 	root = goo_canvas_group_model_new (NULL, NULL);
 	goo_canvas_set_root_item_model (GOO_CANVAS (canvas), root);
Index: goocanvas-trunk/demo/mv-demo-clipping.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-clipping.c,v
retrieving revision 1.2
diff -u -r1.2 mv-demo-clipping.c
--- goocanvas-trunk/demo/mv-demo-clipping.c	8 Mar 2007 12:31:59 -0000	1.2
+++ goocanvas-trunk/demo/mv-demo-clipping.c	1 Sep 2008 09:04:38 -0000
@@ -35,7 +35,7 @@
   goo_canvas_item_model_rotate (model, 30, 0, 0);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse (unclipped)");
+		    G_CALLBACK (on_button_press), "Blue ellipse (unclipped)");
 
   model = goo_canvas_rect_model_new (root, 200, 50, 100, 100,
 				     "fill-color", "red",
@@ -43,20 +43,20 @@
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle (unclipped)");
+		    G_CALLBACK (on_button_press), "Red rectangle (unclipped)");
 
   model = goo_canvas_rect_model_new (root, 380, 50, 100, 100,
 				     "fill-color", "yellow",
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle (unclipped)");
+		    G_CALLBACK (on_button_press), "Yellow rectangle (unclipped)");
 
   model = goo_canvas_text_model_new (root, "Sample Text", 520, 100, -1, GTK_ANCHOR_NW,
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text (unclipped)");
+		    G_CALLBACK (on_button_press), "Text (unclipped)");
 
 
   /* Clipped items. */
@@ -68,7 +68,7 @@
   goo_canvas_item_model_rotate (model, 30, 0, 0);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse");
+		    G_CALLBACK (on_button_press), "Blue ellipse");
 
   model = goo_canvas_rect_model_new (root, 200, 250, 100, 100,
 				     "fill-color", "red",
@@ -77,7 +77,7 @@
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle");
+		    G_CALLBACK (on_button_press), "Red rectangle");
 
   model = goo_canvas_rect_model_new (root, 380, 250, 100, 100,
 				     "fill-color", "yellow",
@@ -85,14 +85,14 @@
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle");
+		    G_CALLBACK (on_button_press), "Yellow rectangle");
 
   model = goo_canvas_text_model_new (root, "Sample Text", 520, 300, -1, GTK_ANCHOR_NW,
 				     "clip-path", "M535,300 h75 v40 h-75 z",
 				     NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text (unclipped)");
+		    G_CALLBACK (on_button_press), "Text (unclipped)");
 
 
   /* Table with clipped items. */
@@ -109,7 +109,7 @@
   goo_canvas_item_model_rotate (model, 30, 0, 0);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Blue ellipse");
+		    G_CALLBACK (on_button_press), "Blue ellipse");
 
   model = goo_canvas_rect_model_new (table, 200, 250, 100, 100,
 				     "fill-color", "red",
@@ -121,7 +121,7 @@
 					      NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Red rectangle");
+		    G_CALLBACK (on_button_press), "Red rectangle");
 
   model = goo_canvas_rect_model_new (table, 380, 250, 100, 100,
 				     "fill-color", "yellow",
@@ -132,7 +132,7 @@
 					      NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Yellow rectangle");
+		    G_CALLBACK (on_button_press), "Yellow rectangle");
 
   model = goo_canvas_text_model_new (table, "Sample Text", 520, 300, -1, GTK_ANCHOR_NW,
 				     "clip-path", "M535,300 h75 v40 h-75 z",
@@ -142,7 +142,7 @@
 					      NULL);
   item = goo_canvas_get_item (canvas, model);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, "Text (unclipped)");
+		    G_CALLBACK (on_button_press), "Text (unclipped)");
 }
 
 
Index: goocanvas-trunk/demo/mv-demo-events.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-events.c,v
retrieving revision 1.1
diff -u -r1.1 mv-demo-events.c
--- goocanvas-trunk/demo/mv-demo-events.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-demo-events.c	1 Sep 2008 09:04:38 -0000
@@ -33,7 +33,7 @@
 		 gpointer            data)
 {
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 }
 
 
@@ -155,7 +155,7 @@
   canvas = goo_canvas_new ();
 
   g_signal_connect (canvas, "item_created",
-		    (GtkSignalFunc) on_item_created, NULL);
+		    G_CALLBACK (on_item_created), NULL);
 
   root = goo_canvas_group_model_new (NULL, NULL);
 
Index: goocanvas-trunk/demo/mv-demo-features.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-features.c,v
retrieving revision 1.3
diff -u -r1.3 mv-demo-features.c
--- goocanvas-trunk/demo/mv-demo-features.c	14 May 2007 09:51:25 -0000	1.3
+++ goocanvas-trunk/demo/mv-demo-features.c	1 Sep 2008 09:04:38 -0000
@@ -41,7 +41,7 @@
   if (g_object_get_data (G_OBJECT (model), "parent1"))
     {
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_button_press, NULL);
+			G_CALLBACK (on_button_press), NULL);
     }
 }
 
@@ -83,7 +83,7 @@
 	canvas = goo_canvas_new ();
 
 	g_signal_connect (canvas, "item_created",
-			  (GtkSignalFunc) on_item_created, NULL);
+			  G_CALLBACK (on_item_created), NULL);
 
 	root = goo_canvas_group_model_new (NULL, NULL);
 
@@ -120,7 +120,7 @@
 	g_object_set_data (G_OBJECT (item), "parent2", parent2);
 #if 0
 	g_signal_connect (G_OBJECT (item), "event",
-			  (GtkSignalFunc) item_event,
+			  G_CALLBACK (item_event),
 			  NULL);
 #endif
 
@@ -142,7 +142,7 @@
 	g_object_set_data (G_OBJECT (group), "parent2", parent2);
 #if 0
 	g_signal_connect (G_OBJECT (group), "event",
-			    (GtkSignalFunc) item_event,
+			    G_CALLBACK (item_event),
 			    NULL);
 #endif
 
Index: goocanvas-trunk/demo/mv-demo-fifteen.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-fifteen.c,v
retrieving revision 1.1
diff -u -r1.1 mv-demo-fifteen.c
--- goocanvas-trunk/demo/mv-demo-fifteen.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-demo-fifteen.c	1 Sep 2008 09:04:39 -0000
@@ -175,13 +175,13 @@
       && GOO_IS_CANVAS_GROUP_MODEL (model))
     {
       g_signal_connect (item, "enter_notify_event",
-			(GtkSignalFunc) piece_enter_notify,
+			G_CALLBACK (piece_enter_notify),
 			NULL);
       g_signal_connect (item, "leave_notify_event",
-			(GtkSignalFunc) piece_leave_notify,
+			G_CALLBACK (piece_leave_notify),
 			NULL);
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) piece_button_press,
+			G_CALLBACK (piece_button_press),
 			NULL);
     }
 }
@@ -272,7 +272,7 @@
 	canvas = goo_canvas_new ();
 
 	g_signal_connect (canvas, "item_created",
-			  (GtkSignalFunc) on_item_created, NULL);
+			  G_CALLBACK (on_item_created), NULL);
 
 	root = goo_canvas_group_model_new (NULL, NULL);
 	goo_canvas_set_root_item_model (GOO_CANVAS (canvas), root);
@@ -288,7 +288,7 @@
 	board = g_new (GooCanvasItemModel *, 16);
 	g_object_set_data (G_OBJECT (canvas), "board", board);
 	g_signal_connect (canvas, "destroy",
-			  (GtkSignalFunc) free_stuff, board);
+			  G_CALLBACK (free_stuff), board);
 
 	for (i = 0; i < 15; i++) {
 		y = i / 4;
@@ -329,7 +329,7 @@
 	gtk_box_pack_start (GTK_BOX (vbox), button, FALSE, FALSE, 0);
 	g_object_set_data (G_OBJECT (button), "board", board);
 	g_signal_connect (button, "clicked",
-			  (GtkSignalFunc) scramble,
+			  G_CALLBACK (scramble),
 			  canvas);
 	gtk_widget_show (button);
 
Index: goocanvas-trunk/demo/mv-demo-focus.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-focus.c,v
retrieving revision 1.1
diff -u -r1.1 mv-demo-focus.c
--- goocanvas-trunk/demo/mv-demo-focus.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-demo-focus.c	1 Sep 2008 09:04:39 -0000
@@ -87,15 +87,15 @@
       g_object_set (model, "can-focus", TRUE, NULL);
 
       g_signal_connect (item, "focus_in_event",
-			(GtkSignalFunc) on_focus_in, NULL);
+			G_CALLBACK (on_focus_in), NULL);
       g_signal_connect (item, "focus_out_event",
-			(GtkSignalFunc) on_focus_out, NULL);
+			G_CALLBACK (on_focus_out), NULL);
 
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_button_press, NULL);
+			G_CALLBACK (on_button_press), NULL);
 
       g_signal_connect (item, "key_press_event",
-			(GtkSignalFunc) on_key_press, NULL);
+			G_CALLBACK (on_key_press), NULL);
     }
 }
 
@@ -175,7 +175,7 @@
   gtk_container_add (GTK_CONTAINER (scrolled_win), canvas);
 
   g_signal_connect (canvas, "item_created",
-		    (GtkSignalFunc) on_item_created, NULL);
+		    G_CALLBACK (on_item_created), NULL);
 
   setup_canvas (canvas);
 
Index: goocanvas-trunk/demo/mv-demo-grabs.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-grabs.c,v
retrieving revision 1.1
diff -u -r1.1 mv-demo-grabs.c
--- goocanvas-trunk/demo/mv-demo-grabs.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-demo-grabs.c	1 Sep 2008 09:04:39 -0000
@@ -236,18 +236,18 @@
 
   view_id = g_strdup_printf ("%s-background", id);
   g_signal_connect (fixed, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (fixed, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (fixed, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (fixed, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (fixed, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (fixed, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 
 
   drawing_area = gtk_drawing_area_new ();
@@ -269,18 +269,18 @@
 
   view_id = g_strdup_printf ("%s-left", id);
   g_signal_connect (drawing_area, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (drawing_area, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (drawing_area, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (drawing_area, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (drawing_area, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (drawing_area, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 
 
   drawing_area = gtk_drawing_area_new ();
@@ -302,18 +302,18 @@
 
   view_id = g_strdup_printf ("%s-right", id);
   g_signal_connect (drawing_area, "expose_event",
-		    (GtkSignalFunc) on_widget_expose, view_id);
+		    G_CALLBACK (on_widget_expose), view_id);
 
   g_signal_connect (drawing_area, "enter_notify_event",
-		    (GtkSignalFunc) on_widget_enter_notify, view_id);
+		    G_CALLBACK (on_widget_enter_notify), view_id);
   g_signal_connect (drawing_area, "leave_notify_event",
-		    (GtkSignalFunc) on_widget_leave_notify, view_id);
+		    G_CALLBACK (on_widget_leave_notify), view_id);
   g_signal_connect (drawing_area, "motion_notify_event",
-		    (GtkSignalFunc) on_widget_motion_notify, view_id);
+		    G_CALLBACK (on_widget_motion_notify), view_id);
   g_signal_connect (drawing_area, "button_press_event",
-		    (GtkSignalFunc) on_widget_button_press, view_id);
+		    G_CALLBACK (on_widget_button_press), view_id);
   g_signal_connect (drawing_area, "button_release_event",
-		    (GtkSignalFunc) on_widget_button_release, view_id);
+		    G_CALLBACK (on_widget_button_release), view_id);
 }
 
 
@@ -326,15 +326,15 @@
   if (GOO_IS_CANVAS_RECT (model))
     {
       g_signal_connect (item, "enter_notify_event",
-			(GtkSignalFunc) on_enter_notify, NULL);
+			G_CALLBACK (on_enter_notify), NULL);
       g_signal_connect (item, "leave_notify_event",
-			(GtkSignalFunc) on_leave_notify, NULL);
+			G_CALLBACK (on_leave_notify), NULL);
       g_signal_connect (item, "motion_notify_event",
-			(GtkSignalFunc) on_motion_notify, NULL);
+			G_CALLBACK (on_motion_notify), NULL);
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_button_press, NULL);
+			G_CALLBACK (on_button_press), NULL);
       g_signal_connect (item, "button_release_event",
-			(GtkSignalFunc) on_button_release, NULL);
+			G_CALLBACK (on_button_release), NULL);
     }
 }
 
@@ -354,7 +354,7 @@
   canvas = goo_canvas_new ();
 
   g_signal_connect (canvas, "item_created",
-		    (GtkSignalFunc) on_item_created, NULL);
+		    G_CALLBACK (on_item_created), NULL);
 
   gtk_widget_set_size_request (canvas, 200, 100);
   goo_canvas_set_bounds (GOO_CANVAS (canvas), 0, 0, 200, 100);
Index: goocanvas-trunk/demo/mv-demo-paths.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-paths.c,v
retrieving revision 1.2
diff -u -r1.2 mv-demo-paths.c
--- goocanvas-trunk/demo/mv-demo-paths.c	13 May 2007 11:43:05 -0000	1.2
+++ goocanvas-trunk/demo/mv-demo-paths.c	1 Sep 2008 09:04:39 -0000
@@ -156,7 +156,7 @@
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
   g_signal_connect (w, "clicked",
-		    (GtkSignalFunc) move_path_clicked, canvas);
+		    G_CALLBACK (move_path_clicked), canvas);
 
   return vbox;
 }
Index: goocanvas-trunk/demo/mv-demo-table.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo-table.c,v
retrieving revision 1.4
diff -u -r1.4 mv-demo-table.c
--- goocanvas-trunk/demo/mv-demo-table.c	18 Nov 2007 13:57:40 -0000	1.4
+++ goocanvas-trunk/demo/mv-demo-table.c	1 Sep 2008 09:04:39 -0000
@@ -79,7 +79,7 @@
   item = goo_canvas_get_item (canvas, model);
   g_object_set_data (G_OBJECT (item), "id", text);
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 }
 
 
@@ -182,7 +182,7 @@
   item = goo_canvas_get_item (canvas, square);
   g_object_set_data (G_OBJECT (item), "id", "Red square");
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   circle = goo_canvas_ellipse_model_new (table, 0.0, 0.0, 25.0, 25.0,
 					 "fill-color", "blue",
@@ -195,7 +195,7 @@
   item = goo_canvas_get_item (canvas, circle);
   g_object_set_data (G_OBJECT (item), "id", "Blue circle");
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   triangle = goo_canvas_polyline_model_new (table, TRUE, 3,
 					    25.0, 0.0, 0.0, 50.0, 50.0, 50.0,
@@ -209,7 +209,7 @@
   item = goo_canvas_get_item (canvas, triangle);
   g_object_set_data (G_OBJECT (item), "id", "Yellow triangle");
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 }
 
 
@@ -257,7 +257,7 @@
   item = goo_canvas_get_item (canvas, model);
   g_object_set_data (G_OBJECT (item), "id", "Text Item");
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 #endif
 
   model = goo_canvas_rect_model_new (table, 0.0, 0.0, width - 2, 10.0,
Index: goocanvas-trunk/demo/mv-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-demo.c,v
retrieving revision 1.15
diff -u -r1.15 mv-demo.c
--- goocanvas-trunk/demo/mv-demo.c	27 Mar 2008 14:08:54 -0000	1.15
+++ goocanvas-trunk/demo/mv-demo.c	1 Sep 2008 09:04:40 -0000
@@ -370,16 +370,16 @@
   if (!goo_canvas_item_model_get_parent (model))
     {
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_background_button_press, NULL);
+			G_CALLBACK (on_background_button_press), NULL);
     }
   else if (!g_object_get_data (G_OBJECT (model), "skip-signal-connection"))
     {
       g_signal_connect (item, "motion_notify_event",
-			(GtkSignalFunc) on_motion_notify, NULL);
+			G_CALLBACK (on_motion_notify), NULL);
       g_signal_connect (item, "button_press_event",
-			(GtkSignalFunc) on_button_press, NULL);
+			G_CALLBACK (on_button_press), NULL);
       g_signal_connect (item, "button_release_event",
-			(GtkSignalFunc) on_button_release, NULL);
+			G_CALLBACK (on_button_release), NULL);
     }
 }
 
@@ -418,7 +418,7 @@
 	goo_canvas_set_bounds (GOO_CANVAS (canvas), 0, 0, 604, 454);
 
 	g_signal_connect (canvas, "item_created",
-			  (GtkSignalFunc) on_item_created, NULL);
+			  G_CALLBACK (on_item_created), NULL);
 
 	/* Zoom */
 
@@ -429,7 +429,7 @@
 	adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 50.00, 0.05, 0.50, 0.50));
 	w = gtk_spin_button_new (adj, 0.0, 2);
 	g_signal_connect (adj, "value_changed",
-			  (GtkSignalFunc) zoom_changed,
+			  G_CALLBACK (zoom_changed),
 			  canvas);
 	gtk_widget_set_size_request (w, 50, -1);
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
@@ -441,7 +441,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	/*gtk_widget_show (w);*/
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) center_toggled,
+			  G_CALLBACK (center_toggled),
 			  canvas);
 
 	/* Move Ellipse */
@@ -450,7 +450,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) move_ellipse_clicked,
+			  G_CALLBACK (move_ellipse_clicked),
 			  canvas);
 
 	/* Animate Ellipse */
@@ -459,7 +459,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) animate_ellipse_clicked,
+			  G_CALLBACK (animate_ellipse_clicked),
 			  canvas);
 	
 	/* Stop Animation */
@@ -468,7 +468,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) stop_animation_clicked,
+			  G_CALLBACK (stop_animation_clicked),
 			  canvas);
 	
 
@@ -479,7 +479,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) write_pdf_clicked,
+			  G_CALLBACK (write_pdf_clicked),
 			  canvas);
 #endif
 
@@ -487,7 +487,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) change_bounds_clicked,
+			  G_CALLBACK (change_bounds_clicked),
 			  canvas);
 
 	hbox = gtk_hbox_new (FALSE, 4);
@@ -504,21 +504,21 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_50_50_clicked,
+			  G_CALLBACK (scroll_to_50_50_clicked),
 			  canvas);
 
 	w = gtk_button_new_with_label("250,250");
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_250_250_clicked,
+			  G_CALLBACK (scroll_to_250_250_clicked),
 			  canvas);
 
 	w = gtk_button_new_with_label("500,500");
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "clicked",
-			  (GtkSignalFunc) scroll_to_500_500_clicked,
+			  G_CALLBACK (scroll_to_500_500_clicked),
 			  canvas);
 
 	/* Scroll anchor */
@@ -532,7 +532,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_NW));
@@ -542,7 +542,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_N));
@@ -552,7 +552,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_NE));
@@ -562,7 +562,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_W));
@@ -572,7 +572,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_CENTER));
@@ -582,7 +582,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_E));
@@ -592,7 +592,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_SW));
@@ -602,7 +602,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_S));
@@ -612,7 +612,7 @@
 	gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
 	gtk_widget_show (w);
 	g_signal_connect (w, "toggled",
-			  (GtkSignalFunc) anchor_toggled,
+			  G_CALLBACK (anchor_toggled),
 			  canvas);
 	g_object_set_data (G_OBJECT (w), "anchor",
 			   GINT_TO_POINTER (GTK_ANCHOR_SE));
@@ -633,7 +633,7 @@
 
 #if 0
 	g_signal_connect_after (canvas, "key_press_event",
-				(GtkSignalFunc) key_press,
+				G_CALLBACK (key_press),
 				NULL);
 
 	GTK_WIDGET_SET_FLAGS (canvas, GTK_CAN_FOCUS);
@@ -1302,7 +1302,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   notebook = gtk_notebook_new ();
Index: goocanvas-trunk/demo/mv-scalability-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-scalability-demo.c,v
retrieving revision 1.4
diff -u -r1.4 mv-scalability-demo.c
--- goocanvas-trunk/demo/mv-scalability-demo.c	25 Apr 2007 13:24:38 -0000	1.4
+++ goocanvas-trunk/demo/mv-scalability-demo.c	1 Sep 2008 09:04:41 -0000
@@ -94,7 +94,7 @@
 
   item = goo_canvas_get_item (GOO_CANVAS (canvas), root);
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 
 #ifdef USE_PIXMAP
   pixbuf = gdk_pixbuf_new_from_file("toroid.png", NULL);
@@ -191,7 +191,7 @@
 
 #if 0
 		  g_signal_connect (item, "motion_notify_event",
-				    (GtkSignalFunc) on_motion_notify, NULL);
+				    G_CALLBACK (on_motion_notify), NULL);
 #endif
 
 #ifdef USE_TEXT
@@ -279,7 +279,7 @@
   gtk_widget_show (canvas);
 
   g_signal_connect (canvas, "expose_event",
-		    (GtkSignalFunc) on_expose_event, NULL);
+		    G_CALLBACK (on_expose_event), NULL);
 
   return canvas;
 }
@@ -306,7 +306,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
Index: goocanvas-trunk/demo/mv-simple-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-simple-demo.c,v
retrieving revision 1.1
diff -u -r1.1 mv-simple-demo.c
--- goocanvas-trunk/demo/mv-simple-demo.c	29 Nov 2006 18:27:06 -0000	1.1
+++ goocanvas-trunk/demo/mv-simple-demo.c	1 Sep 2008 09:04:41 -0000
@@ -27,7 +27,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
@@ -64,7 +64,7 @@
   /* Connect a signal handler for the rectangle item. */
   rect_item = goo_canvas_get_item (GOO_CANVAS (canvas), rect_model);
   g_signal_connect (rect_item, "button_press_event",
-		    (GtkSignalFunc) on_rect_button_press, NULL);
+		    G_CALLBACK (on_rect_button_press), NULL);
 
   /* Pass control to the GTK+ main event loop. */
   gtk_main ();
Index: goocanvas-trunk/demo/mv-table-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/mv-table-demo.c,v
retrieving revision 1.2
diff -u -r1.2 mv-table-demo.c
--- goocanvas-trunk/demo/mv-table-demo.c	6 Apr 2008 16:00:14 -0000	1.2
+++ goocanvas-trunk/demo/mv-table-demo.c	1 Sep 2008 09:04:41 -0000
@@ -227,7 +227,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   vbox = gtk_vbox_new (FALSE, 4);
Index: goocanvas-trunk/demo/scalability-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/scalability-demo.c,v
retrieving revision 1.10
diff -u -r1.10 scalability-demo.c
--- goocanvas-trunk/demo/scalability-demo.c	25 Apr 2007 13:24:38 -0000	1.10
+++ goocanvas-trunk/demo/scalability-demo.c	1 Sep 2008 09:04:41 -0000
@@ -92,7 +92,7 @@
   root = goo_canvas_get_root_item (GOO_CANVAS (canvas));
 
   g_signal_connect (root, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 
   g_object_set (G_OBJECT (root),
 		"font", "Sans 8",
@@ -190,7 +190,7 @@
 
 #if 0
 		  g_signal_connect (item, "motion_notify_event",
-				    (GtkSignalFunc) on_motion_notify, NULL);
+				    G_CALLBACK (on_motion_notify), NULL);
 #endif
 
 #ifdef USE_TEXT
@@ -274,7 +274,7 @@
   gtk_widget_show (canvas);
 
   g_signal_connect (canvas, "expose_event",
-		    (GtkSignalFunc) on_expose_event, NULL);
+		    G_CALLBACK (on_expose_event), NULL);
 
   return canvas;
 }
@@ -301,7 +301,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
Index: goocanvas-trunk/demo/simple-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/simple-demo.c,v
retrieving revision 1.3
diff -u -r1.3 simple-demo.c
--- goocanvas-trunk/demo/simple-demo.c	29 Nov 2006 18:47:02 -0000	1.3
+++ goocanvas-trunk/demo/simple-demo.c	1 Sep 2008 09:04:42 -0000
@@ -26,7 +26,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
@@ -60,7 +60,7 @@
 
   /* Connect a signal handler for the rectangle item. */
   g_signal_connect (rect_item, "button_press_event",
-		    (GtkSignalFunc) on_rect_button_press, NULL);
+		    G_CALLBACK (on_rect_button_press), NULL);
 
   /* Pass control to the GTK+ main event loop. */
   gtk_main ();
Index: goocanvas-trunk/demo/table-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/table-demo.c,v
retrieving revision 1.8
diff -u -r1.8 table-demo.c
--- goocanvas-trunk/demo/table-demo.c	6 Apr 2008 16:00:14 -0000	1.8
+++ goocanvas-trunk/demo/table-demo.c	1 Sep 2008 09:04:42 -0000
@@ -219,7 +219,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   vbox = gtk_vbox_new (FALSE, 4);
Index: goocanvas-trunk/demo/units-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/units-demo.c,v
retrieving revision 1.3
diff -u -r1.3 units-demo.c
--- goocanvas-trunk/demo/units-demo.c	24 Feb 2007 11:16:36 -0000	1.3
+++ goocanvas-trunk/demo/units-demo.c	1 Sep 2008 09:04:42 -0000
@@ -49,7 +49,7 @@
   item = goo_canvas_rect_new (root, d[0], d[1], d[2], d[3],
 			      NULL);
   g_signal_connect (item, "motion_notify_event",
-		    (GtkSignalFunc) on_motion_notify, NULL);
+		    G_CALLBACK (on_motion_notify), NULL);
 
   sprintf (buffer, "This box is %gx%g %s", d[2], d[3], units_name);
   sprintf (font_desc, "Sans %gpx", d[4]);
@@ -99,7 +99,7 @@
   adj = GTK_ADJUSTMENT (gtk_adjustment_new (1.00, 0.05, 100.00, 0.05, 0.50, 0.50));
   w = gtk_spin_button_new (adj, 0.0, 2);
   g_signal_connect (adj, "value_changed",
-		    (GtkSignalFunc) zoom_changed,
+		    G_CALLBACK (zoom_changed),
 		    canvas);
   gtk_widget_set_size_request (w, 50, -1);
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
@@ -147,7 +147,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   notebook = gtk_notebook_new ();
Index: goocanvas-trunk/demo/widgets-demo.c
===================================================================
RCS file: /cvs/cairo/goocanvas/demo/widgets-demo.c,v
retrieving revision 1.4
diff -u -r1.4 widgets-demo.c
--- goocanvas-trunk/demo/widgets-demo.c	9 May 2008 10:12:11 -0000	1.4
+++ goocanvas-trunk/demo/widgets-demo.c	1 Sep 2008 09:04:42 -0000
@@ -251,15 +251,15 @@
   g_object_set_data (G_OBJECT (item), "id", color);
 
   g_signal_connect (item, "focus_in_event",
-		    (GtkSignalFunc) on_focus_in, NULL);
+		    G_CALLBACK (on_focus_in), NULL);
   g_signal_connect (item, "focus_out_event",
-		    (GtkSignalFunc) on_focus_out, NULL);
+		    G_CALLBACK (on_focus_out), NULL);
 
   g_signal_connect (item, "button_press_event",
-		    (GtkSignalFunc) on_button_press, NULL);
+		    G_CALLBACK (on_button_press), NULL);
 
   g_signal_connect (item, "key_press_event",
-		    (GtkSignalFunc) on_key_press, NULL);
+		    G_CALLBACK (on_key_press), NULL);
 }
 
 
@@ -279,7 +279,7 @@
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
-  g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+  g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
 		    NULL);
 
   vbox = gtk_vbox_new (FALSE, 4);
@@ -294,27 +294,27 @@
   w = gtk_button_new_with_label ("Add Widget");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) add_widget_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (add_widget_clicked), NULL);
 
   w = gtk_button_new_with_label ("Remove Widget");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) remove_widget_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (remove_widget_clicked), NULL);
 
   w = gtk_button_new_with_label ("Move Widget");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) move_widget_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (move_widget_clicked), NULL);
 
   w = gtk_button_new_with_label ("Change Anchor");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) change_anchor_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (change_anchor_clicked), NULL);
 
   w = gtk_button_new_with_label ("Change Widget");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) change_widget_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (change_widget_clicked), NULL);
 
   hbox = gtk_hbox_new (FALSE, 4);
   gtk_box_pack_start (GTK_BOX (vbox), hbox, FALSE, FALSE, 0);
@@ -323,27 +323,27 @@
   w = gtk_button_new_with_label ("Hide Canvas");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) hide_canvas_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (hide_canvas_clicked), NULL);
 
   w = gtk_button_new_with_label ("Show Canvas");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) show_canvas_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (show_canvas_clicked), NULL);
 
   w = gtk_button_new_with_label ("Hide Item");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) hide_item_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (hide_item_clicked), NULL);
 
   w = gtk_button_new_with_label ("Show Item");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) show_item_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (show_item_clicked), NULL);
 
   w = gtk_button_new_with_label ("Change Transform");
   gtk_box_pack_start (GTK_BOX (hbox), w, FALSE, FALSE, 0);
   gtk_widget_show (w);
-  g_signal_connect (w, "clicked", (GtkSignalFunc) change_transform_clicked, NULL);
+  g_signal_connect (w, "clicked", G_CALLBACK (change_transform_clicked), NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
   gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolled_win),
Index: goocanvas-trunk/src/goocanvas.c
===================================================================
RCS file: /cvs/cairo/goocanvas/src/goocanvas.c,v
retrieving revision 1.27
diff -u -r1.27 goocanvas.c
--- goocanvas-trunk/src/goocanvas.c	18 May 2008 09:22:57 -0000	1.27
+++ goocanvas-trunk/src/goocanvas.c	1 Sep 2008 09:04:47 -0000
@@ -36,7 +36,7 @@
  *    window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  *    gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
  *    gtk_widget_show (window);
- *    g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
+ *    g_signal_connect (window, "delete_event", G_CALLBACK (on_delete_event),
  *                      NULL);
  *  
  *    scrolled_win = gtk_scrolled_window_new (NULL, NULL);
@@ -70,7 +70,7 @@
  *  
  *    /&ast; Connect a signal handler for the rectangle item. &ast;/
  *    g_signal_connect (rect_item, "button_press_event",
- *                      (GtkSignalFunc) on_rect_button_press, NULL);
+ *                      G_CALLBACK (on_rect_button_press), NULL);
  *  
  *    /&ast; Pass control to the GTK+ main event loop. &ast;/
  *    gtk_main&nbsp;();
@@ -968,7 +968,7 @@
  * <informalexample><programlisting>
  *    item = goo_canvas_get_item (GOO_CANVAS (canvas), my_item);
  *    g_signal_connect (item, "button_press_event",
- *                      (GtkSignalFunc) on_my_item_button_press, NULL);
+ *                      G_CALLBACK (on_my_item_button_press), NULL);
  * </programlisting></informalexample>
  *
  * More complex applications may want to use the #GooCanvas::item-created
