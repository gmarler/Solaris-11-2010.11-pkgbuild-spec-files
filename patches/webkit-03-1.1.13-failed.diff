diff -r eac9de5b7ef5 JavaScriptCore/interpreter/RegisterFile.h
--- a/JavaScriptCore/interpreter/RegisterFile.h	Tue Dec 29 16:47:51 2009 +0800
+++ b/JavaScriptCore/interpreter/RegisterFile.h	Tue Dec 29 16:48:18 2009 +0800
@@ -174,7 +174,7 @@
 
         size_t bufferLength = (capacity + maxGlobals) * sizeof(Register);
     #if HAVE(MMAP)
-        m_buffer = static_cast<Register*>(mmap(0, bufferLength, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANON, VM_TAG_FOR_REGISTERFILE_MEMORY, 0));
+        m_buffer = reinterpret_cast<Register*>(mmap(0, bufferLength, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANON, VM_TAG_FOR_REGISTERFILE_MEMORY, 0));
         if (m_buffer == MAP_FAILED) {
 #if PLATFORM(WINCE)
             fprintf(stderr, "Could not allocate register file: %d\n", GetLastError());
diff -r eac9de5b7ef5 JavaScriptCore/wtf/FastMalloc.cpp
--- a/JavaScriptCore/wtf/FastMalloc.cpp	Tue Dec 29 16:47:51 2009 +0800
+++ b/JavaScriptCore/wtf/FastMalloc.cpp	Tue Dec 29 16:48:18 2009 +0800
@@ -1435,6 +1435,7 @@
   // Without this, Visual Studio will complain that this method does not return a value.
   return 0;
 #endif
+  return 0; //SUN Compiler need a return 
 }
 
 void TCMalloc_PageHeap::scavenge() 
diff -r eac9de5b7ef5 JavaScriptCore/wtf/Platform.h
--- a/JavaScriptCore/wtf/Platform.h	Tue Dec 29 16:47:51 2009 +0800
+++ b/JavaScriptCore/wtf/Platform.h	Tue Dec 29 16:48:18 2009 +0800
@@ -411,6 +411,11 @@
 #define WTF_COMPILER_RVCT 1
 #endif
 
+#if defined(__SUNPRO_C) || defined(__SUNPRO_CC)
+#define WTF_COMPILER_SUNCC 1
+#endif
+
+
 /* COMPILER(GCC) */
 /* --gnu option of the RVCT compiler also defines __GNUC__ */
 #if defined(__GNUC__) && !COMPILER(RVCT)
diff -r eac9de5b7ef5 WebCore/bindings/scripts/IDLParser.pm
--- a/WebCore/bindings/scripts/IDLParser.pm	Tue Dec 29 16:47:51 2009 +0800
+++ b/WebCore/bindings/scripts/IDLParser.pm	Tue Dec 29 16:48:18 2009 +0800
@@ -64,7 +64,7 @@
     $parentsOnly = shift;
 
     if (!$preprocessor) {
-        $preprocessor = "/usr/bin/gcc -E -P -x c++";
+        $preprocessor = "/usr/sfw/bin/gcc -E -P -x c++";
     }
 
     if (!$defines) {
diff -r eac9de5b7ef5 WebCore/dom/make_names.pl
--- a/WebCore/dom/make_names.pl	Tue Dec 29 16:47:51 2009 +0800
+++ b/WebCore/dom/make_names.pl	Tue Dec 29 16:48:18 2009 +0800
@@ -46,7 +46,7 @@
 my %attrs = ();
 my %parameters = ();
 my $extraDefines = 0;
-my $preprocessor = "/usr/bin/gcc -E -P -x c++";
+my $preprocessor = "/usr/sfw/bin/gcc -E -P -x c++";
 
 GetOptions(
     'tags=s' => \$tagsFile, 
diff -r eac9de5b7ef5 WebCore/loader/appcache/ApplicationCacheGroup.cpp
--- a/WebCore/loader/appcache/ApplicationCacheGroup.cpp	Tue Dec 29 16:47:51 2009 +0800
+++ b/WebCore/loader/appcache/ApplicationCacheGroup.cpp	Tue Dec 29 16:48:18 2009 +0800
@@ -774,7 +774,7 @@
             ASSERT(cacheStorage().isMaximumSizeReached() && m_calledReachedMaxAppCacheSize);
         }
 
-        RefPtr<ApplicationCache> oldNewestCache = (m_newestCache == m_cacheBeingUpdated) ? 0 : m_newestCache;
+        RefPtr<ApplicationCache> oldNewestCache = (m_newestCache == m_cacheBeingUpdated) ?(WTF::RefPtr<WebCore::ApplicationCache>) 0 : m_newestCache;
 
         setNewestCache(m_cacheBeingUpdated.release());
         if (cacheStorage().storeNewestCache(this)) {
diff -r eac9de5b7ef5 WebCore/svg/SVGStopElement.h
--- a/WebCore/svg/SVGStopElement.h	Tue Dec 29 16:47:51 2009 +0800
+++ b/WebCore/svg/SVGStopElement.h	Tue Dec 29 16:48:18 2009 +0800
@@ -39,7 +39,8 @@
 
         virtual RenderObject* createRenderer(RenderArena*, RenderStyle*);
 
-        ANIMATED_PROPERTY_DECLARATIONS(SVGStopElement, SVGNames::stopTagString, SVGNames::offsetAttrString, float, Offset, offset)
+        ANIMATED_PROPERTY_DECLARATIONS(SVGStopElement, (const char
+				*)SVGNames::stopTagString, (const char *)SVGNames::offsetAttrString, float, Offset, offset)
     };
 
 } // namespace WebCore
