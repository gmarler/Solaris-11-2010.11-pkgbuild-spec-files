diff -Naur lives-1.1.2/src/cvirtual.c lives-1.1.2-patch/src/cvirtual.c
--- lives-1.1.2/src/cvirtual.c	2009-09-05 14:36:30.000000000 +0200
+++ lives-1.1.2-patch/src/cvirtual.c	2009-09-17 20:58:32.223725764 +0200
@@ -19,7 +19,7 @@
 
 
 
-inline gint count_virtual_frames(int *findex, int size) {
+gint count_virtual_frames(int *findex, int size) {
   register int i;
   gint count=0;
   for (i=0;i<size;i++) if (findex[i]!=-1) count++;
diff -Naur lives-1.1.2/src/cvirtual.h lives-1.1.2-patch/src/cvirtual.h
--- lives-1.1.2/src/cvirtual.h	2009-09-05 14:36:30.000000000 +0200
+++ lives-1.1.2-patch/src/cvirtual.h	2009-09-17 20:58:40.317431361 +0200
@@ -23,4 +23,4 @@
 
 void restore_frame_index_back (gint sfileno);
 
-inline gint count_virtual_frames(int *findex, int size);
+gint count_virtual_frames(int *findex, int size);
diff -Naur lives-1.1.2/src/main.h lives-1.1.2-patch/src/main.h
--- lives-1.1.2/src/main.h	2009-09-11 15:23:35.000000000 +0200
+++ lives-1.1.2-patch/src/main.h	2009-09-17 21:00:58.754715456 +0200
@@ -646,12 +646,12 @@
 void setenv(const char *name, const char *val, int _xx);
 #endif
 
-inline float LEFloat_to_BEFloat(float f);
+float LEFloat_to_BEFloat(float f);
 int lives_10pow(int pow);
 int get_approx_ln(guint val);
 void lives_free(gpointer ptr);
 void lives_free_with_check(gpointer ptr);
-inline gint myround(gdouble n);
+gint myround(gdouble n);
 void get_dirname(gchar *filename);
 void get_basename(gchar *filename);
 void get_filename(gchar *filename);
@@ -699,10 +699,10 @@
 gchar *ensure_extension(gchar *fname, gchar *ext);
 void activate_url (GtkAboutDialog *about, const gchar *link, gpointer data);
 
-inline gdouble calc_time_from_frame (gint clip, gint frame);
-inline gint calc_frame_from_time (gint filenum, gdouble time);  // nearest frame start
-inline gint calc_frame_from_time2 (gint filenum, gdouble time); // nearest frame end
-inline gint calc_frame_from_time3 (gint filenum, gdouble time); // nearest frame mid
+gdouble calc_time_from_frame (gint clip, gint frame);
+gint calc_frame_from_time (gint filenum, gdouble time);  // nearest frame start
+gint calc_frame_from_time2 (gint filenum, gdouble time); // nearest frame end
+gint calc_frame_from_time3 (gint filenum, gdouble time); // nearest frame mid
 
 gboolean check_for_ratio_fps (gdouble fps);
 gdouble get_ratio_fps(gchar *string);
diff -Naur lives-1.1.2/src/resample.c lives-1.1.2-patch/src/resample.c
--- lives-1.1.2/src/resample.c	2009-09-05 14:36:30.000000000 +0200
+++ lives-1.1.2-patch/src/resample.c	2009-09-17 20:56:03.295791652 +0200
@@ -26,13 +26,13 @@
 
 
 
-inline weed_timecode_t q_gint64 (weed_timecode_t in, gdouble fps) {
+weed_timecode_t q_gint64 (weed_timecode_t in, gdouble fps) {
   if (in>0) return ((weed_timecode_t)((long double)in/(long double)U_SEC*(long double)fps+(long double).5)/(long double)fps)*(weed_timecode_t)U_SECL; // quantise to frame timing
   if (in<0) return ((weed_timecode_t)((long double)in/(long double)U_SEC*(long double)fps-(long double).5)/(long double)fps)*(weed_timecode_t)U_SECL; // quantise to frame timing
   return (weed_timecode_t)0;
 }
 
-inline weed_timecode_t q_dbl (gdouble in, gdouble fps) {
+weed_timecode_t q_dbl (gdouble in, gdouble fps) {
   if (in>0) return ((weed_timecode_t)((long double)in*(long double)fps+(long double).5)/(long double)fps)*(weed_timecode_t)U_SECL; // quantise to frame timing
   if (in<0) return ((weed_timecode_t)((long double)in*(long double)fps-(long double).5)/(long double)fps)*(weed_timecode_t)U_SECL; // quantise to frame timing
   return (weed_timecode_t)0;
diff -Naur lives-1.1.2/src/resample.h lives-1.1.2-patch/src/resample.h
--- lives-1.1.2/src/resample.h	2009-09-05 14:36:30.000000000 +0200
+++ lives-1.1.2-patch/src/resample.h	2009-09-17 20:55:48.221784657 +0200
@@ -34,8 +34,8 @@
 
 _resaudw *resaudw;
 
-inline weed_timecode_t q_gint64(weed_timecode_t in, double fps);
-inline weed_timecode_t q_dbl (gdouble in, gdouble fps);
+weed_timecode_t q_gint64(weed_timecode_t in, double fps);
+weed_timecode_t q_dbl (gdouble in, gdouble fps);
 
 
 weed_plant_t *quantise_events (weed_plant_t *in_list, gdouble new_fps, gboolean allow_gap); // quantise frame events for a single clip
diff -Naur lives-1.1.2/src/utils.c lives-1.1.2-patch/src/utils.c
--- lives-1.1.2/src/utils.c	2009-09-11 15:35:48.000000000 +0200
+++ lives-1.1.2-patch/src/utils.c	2009-09-17 21:01:08.027737704 +0200
@@ -31,7 +31,7 @@
   free(ptr);
 }
 
-inline gint myround(gdouble n) {
+gint myround(gdouble n) {
   return (n>=0.)?(gint)(n + 0.5):(gint)(n - 0.5);
 }
 
@@ -83,13 +83,13 @@
 }
 #endif
 
-inline gdouble calc_time_from_frame (gint clip, gint frame) {
+gdouble calc_time_from_frame (gint clip, gint frame) {
   return (frame-1.)/mainw->files[clip]->fps;
 }
 
 
 
-inline gint calc_frame_from_time (gint filenum, gdouble time) {
+gint calc_frame_from_time (gint filenum, gdouble time) {
   // return the nearest frame for a given time
   int frame=0;
   if (time<0.) return mainw->files[filenum]->frames?1:0;
@@ -97,7 +97,7 @@
   return (frame<mainw->files[filenum]->frames)?frame:mainw->files[filenum]->frames;
 }
 
-inline gint calc_frame_from_time2 (gint filenum, gdouble time) {
+gint calc_frame_from_time2 (gint filenum, gdouble time) {
   // return the nearest frame for a given time
   // allow max (frames+1)
   int frame=0;
@@ -106,7 +106,7 @@
   return (frame<mainw->files[filenum]->frames+1)?frame:mainw->files[filenum]->frames+1;
 }
 
-inline gint calc_frame_from_time3 (gint filenum, gdouble time) {
+gint calc_frame_from_time3 (gint filenum, gdouble time) {
   // return the nearest frame for a given time
   // allow max (frames+1)
   int frame=0;
@@ -117,7 +117,7 @@
 
 
 /* convert to/from a big endian 32 bit float for internal use */
-inline float LEFloat_to_BEFloat(float f) {
+float LEFloat_to_BEFloat(float f) {
   char *b=(char *)(&f);
   if (G_BYTE_ORDER==G_LITTLE_ENDIAN) {
     float fl;
