--- wesnoth-1.3.13/src/display.hpp.fixundefsymbol	2008-01-01 00:10:35.369560469 +0100
+++ wesnoth-1.3.13/src/display.hpp	2008-01-01 00:48:18.970430157 +0100
@@ -408,7 +408,7 @@
 	CKey keys_;
 
 	//! Composes and draws the terrains on a tile
-	void tile_stack_append(surface surf);
+	void tile_stack_append(const surface surf);
 	void tile_stack_append(const std::vector<surface>& surfaces);
 	void tile_stack_render(int x, int y);
 	void tile_stack_clear() {tile_stack_.clear();};
--- wesnoth-1.3.13/src/preferences.hpp.fixundefsymbol	2007-12-31 23:27:28.272725065 +0100
+++ wesnoth-1.3.13/src/preferences.hpp	2007-12-31 23:41:14.565943733 +0100
@@ -47,7 +47,7 @@
 	};
 
 	// Low-level, should be seen only by preferences_display ?
-	void set(std::string key, std::string value);
+	void set(const std::string key, std::string value);
 	const std::string get(const std::string key);
 	void erase(const std::string key);
 
@@ -118,7 +118,7 @@
 	void _set_colour_cursors(bool value);
 
 	int scroll_speed();
-	void set_scroll_speed(int scroll);
+	void set_scroll_speed(const int scroll);
 
 	int draw_delay();
 	void set_draw_delay(int value);
--- wesnoth-1.3.13/src/map.hpp.fixundefsymbol	2008-01-01 00:56:06.600042225 +0100
+++ wesnoth-1.3.13/src/map.hpp	2008-01-01 00:56:19.457444340 +0100
@@ -160,7 +160,7 @@
 	std::string write() const;
 
 	//! Overlays another map onto this one at the given position.
-	void overlay(const gamemap& m, const config& rules, int x=0, int y=0);
+	void overlay(const gamemap& m, const config& rules, const int x=0, const int y=0);
 
 	//! Effective dimensions of the map.
 	int w() const { return w_; }
--- wesnoth-1.3.13/src/serialization/string_utils.hpp.fixundefsymbol	2007-12-31 23:08:25.662663699 +0100
+++ wesnoth-1.3.13/src/serialization/string_utils.hpp	2008-01-01 00:23:28.021009147 +0100
@@ -44,8 +44,8 @@
 
 namespace utils {
 
-bool isnewline(char c);
-bool portable_isspace(char c);
+bool isnewline(const char c);
+bool portable_isspace(const char c);
 bool notspace(char c);
 
 enum { REMOVE_EMPTY = 0x01,	//!< REMOVE_EMPTY : remove empty elements
@@ -77,8 +77,8 @@
 //! Function which will interpolate variables, starting with '$' in the string 'str'
 //! with the equivalent symbols in the given symbol table.
 //! If 'symbols' is NULL, then game event variables will be used instead.
-std::string interpolate_variables_into_string(std::string const &str, string_map const *symbols);
-std::string interpolate_variables_into_string(std::string const &str, const variable_set& variables);
+std::string interpolate_variables_into_string(const std::string &str, const string_map * const symbols);
+std::string interpolate_variables_into_string(const std::string &str, const variable_set& variables);
 
 //! Functions for converting Unicode wide-char strings
 //! to UTF-8 encoded strings, back and forth
