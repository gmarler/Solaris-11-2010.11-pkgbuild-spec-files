From 10736d94e94cdd1611443fdcde8a91e9fe6340e4 Mon Sep 17 00:00:00 2001
From: Colin Walters <walters@verbum.org>
Date: Wed, 8 Apr 2009 15:32:20 -0400
Subject: [PATCH] Bug 578197 - Handle builtin icons

We should be able to handle icons being builtin by converting from
pixbuf to texture directly, so do that.
---
 js/ui/gtkutil.js |   35 ++++++++++++++++++++++++++---------
 js/ui/overlay.js |    5 ++---
 2 files changed, 28 insertions(+), 12 deletions(-)

diff --git a/js/ui/gtkutil.js b/js/ui/gtkutil.js
index 56a9004..7b95cd6 100644
--- a/js/ui/gtkutil.js
+++ b/js/ui/gtkutil.js
@@ -3,19 +3,21 @@
 const Lang = imports.lang;
 
 const Clutter = imports.gi.Clutter;
+const Shell = imports.gi.Shell;
 const Gtk = imports.gi.Gtk;
 
-function loadIconToTexture(gicon, size, fallback) {
-    let iconTheme = Gtk.IconTheme.get_default();
-
+function _loadIconInfo(iconinfo, size, fallback) {
     let path = null;
+    let builtinPixbuf = null;
     let icon = null;
-    if (gicon != null) {
-        let iconinfo = iconTheme.lookup_by_gicon(gicon, size, Gtk.IconLookupFlags.NO_SVG);
-        if (iconinfo)
-            path = iconinfo.get_filename();
+    if (iconinfo != null) {
+        path = iconinfo.get_filename();
+        builtinPixbuf = iconinfo.get_builtin_pixbuf();
     }
-    if (path) {
+    if (builtinPixbuf != null) {
+        icon = new Clutter.Texture({ width: size, height: size });
+        Shell.clutter_texture_set_from_pixbuf(icon, builtinPixbuf);
+    } else if (path) {
         try {
             icon = new Clutter.Texture({ width: size, height: size, load_async: true });
             icon.set_from_file(path);
@@ -27,4 +29,19 @@ function loadIconToTexture(gicon, size, fallback) {
     if (icon == null && fallback)
         icon = new Clutter.Texture({ width: size, height: size });
     return icon;
-}
\ No newline at end of file
+}
+
+function loadIconToTexture(gicon, size, fallback) {
+    let iconTheme = Gtk.IconTheme.get_default();
+    let iconinfo = null;
+    if (gicon != null) {
+        iconinfo = iconTheme.lookup_by_gicon(gicon, size, Gtk.IconLookupFlags.NO_SVG | Gtk.IconLookupFlags.USE_BUILTIN);
+    }
+    return _loadIconInfo(iconinfo, size, fallback);
+}
+
+function loadStockToTexture(stockid, size, fallback) {
+    let iconTheme = Gtk.IconTheme.get_default();
+    let iconinfo = iconTheme.lookup_icon(stockid, size, Gtk.IconLookupFlags.NO_SVG | Gtk.IconLookupFlags.USE_BUILTIN);
+    return _loadIconInfo(iconinfo, size, fallback);
+}
diff --git a/js/ui/overlay.js b/js/ui/overlay.js
index 6c1793d..58cde3a 100644
--- a/js/ui/overlay.js
+++ b/js/ui/overlay.js
@@ -12,6 +12,7 @@ const Lang = imports.lang;
 const AppDisplay = imports.ui.appDisplay;
 const DocDisplay = imports.ui.docDisplay;
 const GenericDisplay = imports.ui.genericDisplay;
+const GtkUtil = imports.ui.gtkutil;
 const Link = imports.ui.link;
 const Main = imports.ui.main;
 const Panel = imports.ui.panel;
@@ -104,9 +105,7 @@ SearchEntry.prototype = {
                                  });
 
         let icontheme = Gtk.IconTheme.get_default();
-        let searchIconTexture = new Clutter.Texture({});
-        let searchIconPath = icontheme.lookup_icon('gtk-find', 16, 0).get_filename();
-        searchIconTexture.set_from_file(searchIconPath);
+        let searchIconTexture = GtkUtil.loadStockToTexture('gtk-find', 16, true);
         this.actor.append(searchIconTexture, 0);
 
         // We need to initialize the text for the entry to have the cursor displayed
-- 
1.6.0.6

