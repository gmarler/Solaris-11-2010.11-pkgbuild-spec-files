--- audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/AAFilter.cpp-orig	2008-03-08 15:15:52.776855000 -0600
+++ audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/AAFilter.cpp	2008-03-08 15:18:08.917949000 -0600
@@ -58,7 +58,7 @@ using namespace soundtouch;
  *
  *****************************************************************************/
 
-AAFilter::AAFilter(const uint length)
+AAFilter::AAFilter(uint length)
 {
     pFIR = FIRFilter::newInstance();
     cutoffFreq = 0.5;
@@ -77,7 +77,7 @@ AAFilter::~AAFilter()
 // Sets new anti-alias filter cut-off edge frequency, scaled to
 // sampling frequency (nyquist frequency = 0.5).
 // The filter will cut frequencies higher than the given frequency.
-void AAFilter::setCutoffFreq(const double newCutoffFreq)
+void AAFilter::setCutoffFreq(double newCutoffFreq)
 {
     cutoffFreq = newCutoffFreq;
     calculateCoeffs();
--- audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/RateTransposer.cpp-orig	2008-03-08 15:17:40.840515000 -0600
+++ audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/RateTransposer.cpp	2008-03-08 15:18:02.769740000 -0600
@@ -150,7 +150,7 @@ RateTransposer::~RateTransposer()
 
 
 /// Enables/disables the anti-alias filter. Zero to disable, nonzero to enable
-void RateTransposer::enableAAFilter(const BOOL newMode)
+void RateTransposer::enableAAFilter(BOOL newMode)
 {
     bUseAAFilter = newMode;
 }
@@ -325,7 +325,7 @@ inline uint RateTransposer::transpose(SA
 
 
 // Sets the number of channels, 1 = mono, 2 = stereo
-void RateTransposer::setChannels(const uint numchannels)
+void RateTransposer::setChannels(uint numchannels)
 {
     if (uChannels == numchannels) return;
 
--- audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp-orig	2008-03-08 15:17:03.634532000 -0600
+++ audacity-src-1.3.3-beta/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp	2008-03-08 15:17:12.906090000 -0600
@@ -73,7 +73,7 @@ FIFOSampleBuffer::~FIFOSampleBuffer()
 
 
 // Sets number of channels, 1 = mono, 2 = stereo
-void FIFOSampleBuffer::setChannels(const uint numChannels)
+void FIFOSampleBuffer::setChannels(uint numChannels)
 {
     uint usedBytes;
 
