--- wine-1.0-rc1.orig/dlls/winex11.drv/xim.c	2008-05-09 13:42:56.000000000 -0400
+++ wine-1.0-rc1/dlls/winex11.drv/xim.c	2008-05-13 21:25:42.864799751 -0400
@@ -35,8 +35,21 @@
 WINE_DEFAULT_DEBUG_CHANNEL(x11drv);
 
 #ifndef HAVE_XICCALLBACK_CALLBACK
-#define XICCallback XIMCallback
-#define XICProc XIMProc
+typedef Bool (*XICProc)(
+    XIC,
+    XPointer,
+    XPointer
+);
+
+typedef struct {
+    XPointer client_data;
+    XICProc callback;
+} XICCallback;
+#endif
+
+#ifdef __sun
+#include <dlfcn.h>
+static int broken = 0;
 #endif
 
 BOOL ximInComposeMode=FALSE;
@@ -355,6 +368,17 @@
         ret = FALSE;
     }
     wine_tsx11_unlock();
+
+#ifdef __sun
+    if (ret)
+    {
+        /* Solaris i18n libraries prior to snv_85 have a broken
+           XRegisterIMInstantiateCallback. Check for old symbols at runtime. */
+        if (dlsym(RTLD_PROBE, "_XInitGenericIM"))
+            broken = 1;
+    }
+#endif
+
     return ret;
 }
 
@@ -368,9 +392,16 @@
     TRACE("xim = %p, p = %p\n", xim, p);
     thread_data->xim = NULL;
     ximStyle = 0;
+#ifdef __sun
+    if (!broken)
+    {
+#endif
     wine_tsx11_lock();
-    XRegisterIMInstantiateCallback( thread_data->display, NULL, NULL, NULL, X11DRV_OpenIM, NULL );
+    XRegisterIMInstantiateCallback(thread_data->display, NULL, NULL, NULL, X11DRV_OpenIM, NULL);
     wine_tsx11_unlock();
+#ifdef __sun
+    }
+#endif
 }
 
 /***********************************************************************
@@ -471,6 +502,9 @@
     }
 
     thread_data->xim = xim;
+#ifdef __sun
+    if (!broken)
+#endif
     XUnregisterIMInstantiateCallback(display, NULL, NULL, NULL, X11DRV_OpenIM, NULL);
 
     wine_tsx11_unlock();
@@ -481,9 +515,16 @@
 
 void X11DRV_SetupXIM(void)
 {
     wine_tsx11_lock();
+#ifdef __sun
+    if (!broken)
+#endif
     XRegisterIMInstantiateCallback(thread_display(), NULL, NULL, NULL, X11DRV_OpenIM, NULL);
+#ifdef __sun
+    else
+        X11DRV_OpenIM(thread_display(), NULL, NULL);
+#endif
     wine_tsx11_unlock();
 }
 
 static BOOL X11DRV_DestroyIC(XIC xic, XPointer p, XPointer data)
