diff --git a/configure.ac b/configure.ac
index c81d62b..237d319 100644
--- a/configure.ac
+++ b/configure.ac
@@ -317,6 +317,19 @@ fi
 AC_SUBST(RBAC_LIBS)
 
 dnl ---------------------------------------------------------------------------
+dnl check for SCF (Only avail on solaris) 
+dnl ---------------------------------------------------------------------------
+
+AC_CHECK_LIB(scf, smf_get_state,
+             [SCF_LIBS=-lscf
+             AC_DEFINE(HAVE_SCF,1,[Define to 1 if the libscf library is present.])],
+             [AC_MSG_WARN([[
+***
+*** libscf was not found.
+]])])
+AC_SUBST(SCF_LIBS)
+
+dnl ---------------------------------------------------------------------------
 dnl Finish
 dnl ---------------------------------------------------------------------------
 
diff --git a/src/Makefile.am b/src/Makefile.am
index bd3ec70..ea8d6e2 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -141,6 +141,7 @@ console_kit_daemon_LDADD =	\
 	$(CONSOLE_KIT_LIBS)	\
 	$(POLKIT_LIBS)		\
 	$(RBAC_LIBS)		\
+	$(SCF_LIBS)		\
 	libck.la		\
 	libck-event-log.la	\
 	$(NULL)
diff --git a/src/ck-seat.c b/src/ck-seat.c
index 9dc1b9f..219f537 100644
--- a/src/ck-seat.c
+++ b/src/ck-seat.c
@@ -1235,6 +1235,41 @@ ck_seat_new_with_devices (const char *sid,
         return CK_SEAT (object);
 }
 
+static gboolean
+is_VT_enabled ()
+{
+#ifdef __sun
+
+#ifdef HAVE_SCF  
+#include <libscf.h> 
+#endif 
+
+        static int vt_enabled = -1; // -1 means this function is not called.
+        if (vt_enabled != -1)
+                return vt_enabled == 1 ? TRUE : FALSE;
+
+        /* TODO: After Solaris Xorg VT support is done, remove the directly
+                 return code
+        */
+        vt_enabled = FALSE;
+        return FALSE;
+
+        char *state = NULL;
+
+        state = smf_get_state ("svc:/system/vtdaemon:default");
+        if (state && g_str_equal (state, SCF_STATE_STRING_ONLINE)) {
+                vt_enabled = TRUE;
+        } else {
+                vt_enabled = FALSE;
+        }
+
+        g_free (state);
+        return vt_enabled;
+#else
+        return TRUE;
+#endif
+}
+
 static char *
 generate_new_tty_device (gboolean is_console,
                          gint     vt)
@@ -1244,8 +1279,26 @@ generate_new_tty_device (gboolean is_console,
         if (vt <= 0)
                 return NULL;
 #ifdef __sun
-        /* Linux and Solaris using different vt device name */
-        res = g_strdup_printf ("/dev/vt/%d", vt);
+        if (is_VT_enabled ()) {
+                /* Linux and Solaris using different vt device name */
+                res = g_strdup_printf ("/dev/vt/%d", vt);
+        } else {
+                /* On Solaris, vt can be disabled running
+                         "svcadm disable vtdaemon"
+                   If vt is disabled, only one display is allowed use
+                  "/dev/console" as tty_device, other local displays should be 
+                  "/dev/dtlocal". If multiple displas are configured as
+                  IsConsole=true, then we follow the following rules:
+                  1) display ":0" always win 
+                  2) if display ":0" not set, we choose the met first display 
+                  This is decided on GDM side.
+                */
+                if (is_console)
+                        res = g_strdup ("/dev/console");
+                else
+                        res = g_strdup ("/dev/dtlocal");
+        }
+
 #else
         res = g_strdup_printf ("vt%d", vt);
 #endif
