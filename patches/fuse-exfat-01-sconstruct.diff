Index: SConstruct
===================================================================
--- a/SConstruct	(revision 144)
+++ b/SConstruct	(working copy)
@@ -25,12 +25,14 @@
 # in it's headers inode numbers are 64-bit by default, but libfuse operates
 # 32-bit inode numbers. It's also possible to link against libfuse_ino64
 # instead.
-cflags = '-Wall -O2 -ggdb -D_FILE_OFFSET_BITS=64 -D__DARWIN_64_BIT_INO_T=0 -Ilibexfat'
-ldflags = ''
+env = Environment(**ARGUMENTS)
+env.Append(CPPDEFINES = {'_FILE_OFFSET_BITS' : 64, '__DARWIN_64_BIT_INO_T' : 0})
+env.Append(CPPDEFINES = {'FUSE_USE_VERSION': 26})
+env.Append(CPPPATH = ['libexfat'])
 
-Library('libexfat/exfat', Glob('libexfat/*.c'), CFLAGS = cflags, LINKFLAGS = ldflags)
-fsck = Program('fsck/exfatck', Glob('fsck/*.c'), CFLAGS = cflags, LINKFLAGS = ldflags, LIBS = ['exfat'], LIBPATH = 'libexfat')
-mount = Program('fuse/mount.exfat-fuse', Glob('fuse/*.c'), CFLAGS = cflags + ' -DFUSE_USE_VERSION=26', LINKFLAGS = ldflags, LIBS = ['exfat', 'fuse'], LIBPATH = 'libexfat')
+env.Library('libexfat/exfat', Glob('libexfat/*.c'))
+fsck = env.Program('fsck/exfatck', Glob('fsck/*.c'), LIBS = ['exfat'], LIBPATH = 'libexfat')
+mount = env.Program('fuse/mount.exfat-fuse', Glob('fuse/*.c'), LIBS = ['exfat', 'fuse'], LIBPATH = 'libexfat')
 
 def get_destdir():
 	try:
