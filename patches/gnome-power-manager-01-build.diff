diff -Nur gnome-power-manager-2.19.1/help/Makefile.am gnome-power-manager-2.19.1-new/help/Makefile.am
--- gnome-power-manager-2.19.1/help/Makefile.am	2007-03-02 06:43:39.000000000 +0800
+++ gnome-power-manager-2.19.1-new/help/Makefile.am	2007-05-08 18:13:24.787226000 +0800
@@ -21,4 +21,4 @@
 	figures/gpm-cell-capacity.png \
 	figures/gpm-suspend-problem.png
 
-DOC_LINGUAS = es fr hu pa ru sv
+DOC_LINGUAS = es fr pa ru sv
diff -Nur gnome-power-manager-2.19.1/src/gpm-array-float.c gnome-power-manager-2.19.1-new/src/gpm-array-float.c
--- gnome-power-manager-2.19.1/src/gpm-array-float.c	2007-04-25 07:09:49.000000000 +0800
+++ gnome-power-manager-2.19.1-new/src/gpm-array-float.c	2007-05-08 18:15:32.105679000 +0800
@@ -75,7 +75,7 @@
  *
  * @array: input array
  **/
-inline gfloat
+gfloat
 gpm_array_float_get (GArray *array, guint i)
 {
 	if (i >= array->len) {
@@ -89,7 +89,7 @@
  *
  * @array: input array
  **/
-inline void
+void
 gpm_array_float_set (GArray *array, guint i, gfloat value)
 {
 	g_array_index (array, gfloat, i) = value;
diff -Nur gnome-power-manager-2.19.1/src/gpm-array-float.h gnome-power-manager-2.19.1-new/src/gpm-array-float.h
--- gnome-power-manager-2.19.1/src/gpm-array-float.h	2007-04-25 06:39:47.000000000 +0800
+++ gnome-power-manager-2.19.1-new/src/gpm-array-float.h	2007-05-08 18:16:40.482411000 +0800
@@ -48,9 +48,9 @@
 gboolean	 gpm_array_float_print			(GArray		*array);
 GArray		*gpm_array_float_convolve		(GArray		*data,
 							 GArray		*kernel);
-inline gfloat	 gpm_array_float_get			(GArray		*array,
+gfloat		 gpm_array_float_get			(GArray		*array,
 							 guint		 i);
-inline void	 gpm_array_float_set			(GArray		*array,
+void		 gpm_array_float_set			(GArray		*array,
 							 guint		 i,
 							 gfloat		 value);
 
diff -Nur gnome-power-manager-2.19.1/src/gpm-debug.h gnome-power-manager-2.19.1-new/src/gpm-debug.h
--- gnome-power-manager-2.19.1/src/gpm-debug.h	2007-04-25 18:51:51.000000000 +0800
+++ gnome-power-manager-2.19.1-new/src/gpm-debug.h	2007-05-08 18:13:24.787614000 +0800
@@ -40,7 +40,7 @@
 #define gpm_assert_run_once(x) static guint (x) = 0; if ((x)++ != 0) gpm_error ("%s, run multi!", __FUNCTION__); gpm_warning ("%s, run multi!", __FUNCTION__);
 #else
 #define gpm_debug
-#define gpm_warning
+#define gpm_warning(...) gpm_warning_real ("", __FILE__, __LINE__, __VA_ARGS__)
 #define gpm_error
 #define gpm_assert_run_once(x)
 #endif
