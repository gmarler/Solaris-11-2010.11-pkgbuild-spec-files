diff -ur SDL_ttf-2.0.8-orig/SDL_ttf.c SDL_ttf-2.0.8/SDL_ttf.c
--- SDL_ttf-2.0.8-orig/SDL_ttf.c	2006-05-01 16:26:17.000000000 +0700
+++ SDL_ttf-2.0.8/SDL_ttf.c	2007-05-27 18:50:44.871281342 +0700
@@ -20,7 +20,7 @@
     slouken@libsdl.org
 */
 
-/* $Id: SDL_ttf.c 2304 2006-05-01 09:26:07Z slouken $ */
+/* $Id$ */
 
 #include <math.h>
 #include <stdio.h>
@@ -43,16 +43,6 @@
 #include FT_FREETYPE_H
 #include FT_OUTLINE_H
 #include FT_TRUETYPE_IDS_H
-/*
-#include <freetype/freetype.h>
-#include <freetype/ftoutln.h>
-#include <freetype/ttnameid.h>
-*/
-#include <freetype/internal/ftobjs.h>
-
-#ifndef FT_OPEN_STREAM
-#define FT_OPEN_STREAM ft_open_stream
-#endif
 
 #include "SDL.h"
 #include "SDL_endian.h"
@@ -278,7 +268,6 @@
 	}
 	memset(stream, 0, sizeof(*stream));
 
-	stream->memory = library->memory;
 	stream->read = RWread;
 	stream->descriptor.pointer = src;
 	stream->pos = (unsigned long)position;
@@ -661,17 +650,19 @@
 
 void TTF_CloseFont( TTF_Font* font )
 {
-	Flush_Cache( font );
-	if ( font->face ) {
-		FT_Done_Face( font->face );
-	}
-	if ( font->args.stream ) {
-		free( font->args.stream );
-	}
-	if ( font->freesrc ) {
-		SDL_RWclose( font->src );
+	if ( font ) {
+		Flush_Cache( font );
+		if ( font->face ) {
+			FT_Done_Face( font->face );
+		}
+		if ( font->args.stream ) {
+			free( font->args.stream );
+		}
+		if ( font->freesrc ) {
+			SDL_RWclose( font->src );
+		}
+		free( font );
 	}
-	free( font );
 }
 
 static Uint16 *LATIN1_to_UNICODE(Uint16 *unicode, const char *text, int len)
@@ -715,42 +706,42 @@
 	return unicode;
 }
 
-int TTF_FontHeight(TTF_Font *font)
+int TTF_FontHeight(const TTF_Font *font)
 {
 	return(font->height);
 }
 
-int TTF_FontAscent(TTF_Font *font)
+int TTF_FontAscent(const TTF_Font *font)
 {
 	return(font->ascent);
 }
 
-int TTF_FontDescent(TTF_Font *font)
+int TTF_FontDescent(const TTF_Font *font)
 {
 	return(font->descent);
 }
 
-int TTF_FontLineSkip(TTF_Font *font)
+int TTF_FontLineSkip(const TTF_Font *font)
 {
 	return(font->lineskip);
 }
 
-long TTF_FontFaces(TTF_Font *font)
+long TTF_FontFaces(const TTF_Font *font)
 {
 	return(font->face->num_faces);
 }
 
-int TTF_FontFaceIsFixedWidth(TTF_Font *font)
+int TTF_FontFaceIsFixedWidth(const TTF_Font *font)
 {
 	return(FT_IS_FIXED_WIDTH(font->face));
 }
 
-char *TTF_FontFaceFamilyName(TTF_Font *font)
+char *TTF_FontFaceFamilyName(const TTF_Font *font)
 {
 	return(font->face->family_name);
 }
 
-char *TTF_FontFaceStyleName(TTF_Font *font)
+char *TTF_FontFaceStyleName(const TTF_Font *font)
 {
 	return(font->face->style_name);
 }
@@ -1734,7 +1725,7 @@
 	Flush_Cache( font );
 }
 
-int TTF_GetFontStyle( TTF_Font* font )
+int TTF_GetFontStyle( const TTF_Font* font )
 {
 	return font->style;
 }
diff -ur SDL_ttf-2.0.8-orig/SDL_ttf.h SDL_ttf-2.0.8/SDL_ttf.h
--- SDL_ttf-2.0.8-orig/SDL_ttf.h	2006-05-12 10:02:42.000000000 +0700
+++ SDL_ttf-2.0.8/SDL_ttf.h	2007-05-27 18:50:48.639182378 +0700
@@ -20,7 +20,7 @@
     slouken@libsdl.org
 */
 
-/* $Id: SDL_ttf.h 2387 2006-05-11 09:03:37Z slouken $ */
+/* $Id$ */
 
 /* This library is a wrapper around the excellent FreeType 2.0 library,
    available at:
@@ -99,32 +99,32 @@
 #define TTF_STYLE_BOLD		0x01
 #define TTF_STYLE_ITALIC	0x02
 #define TTF_STYLE_UNDERLINE	0x04
-extern DECLSPEC int SDLCALL TTF_GetFontStyle(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_GetFontStyle(const TTF_Font *font);
 extern DECLSPEC void SDLCALL TTF_SetFontStyle(TTF_Font *font, int style);
 
 /* Get the total height of the font - usually equal to point size */
-extern DECLSPEC int SDLCALL TTF_FontHeight(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_FontHeight(const TTF_Font *font);
 
 /* Get the offset from the baseline to the top of the font
    This is a positive value, relative to the baseline.
  */
-extern DECLSPEC int SDLCALL TTF_FontAscent(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_FontAscent(const TTF_Font *font);
 
 /* Get the offset from the baseline to the bottom of the font
    This is a negative value, relative to the baseline.
  */
-extern DECLSPEC int SDLCALL TTF_FontDescent(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_FontDescent(const TTF_Font *font);
 
 /* Get the recommended spacing between lines of text for this font */
-extern DECLSPEC int SDLCALL TTF_FontLineSkip(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_FontLineSkip(const TTF_Font *font);
 
 /* Get the number of faces of the font */
-extern DECLSPEC long SDLCALL TTF_FontFaces(TTF_Font *font);
+extern DECLSPEC long SDLCALL TTF_FontFaces(const TTF_Font *font);
 
 /* Get the font face attributes, if any */
-extern DECLSPEC int SDLCALL TTF_FontFaceIsFixedWidth(TTF_Font *font);
-extern DECLSPEC char * SDLCALL TTF_FontFaceFamilyName(TTF_Font *font);
-extern DECLSPEC char * SDLCALL TTF_FontFaceStyleName(TTF_Font *font);
+extern DECLSPEC int SDLCALL TTF_FontFaceIsFixedWidth(const TTF_Font *font);
+extern DECLSPEC char * SDLCALL TTF_FontFaceFamilyName(const TTF_Font *font);
+extern DECLSPEC char * SDLCALL TTF_FontFaceStyleName(const TTF_Font *font);
 
 /* Get the metrics (dimensions) of a glyph
    To understand what these metrics mean, here is a useful link:
