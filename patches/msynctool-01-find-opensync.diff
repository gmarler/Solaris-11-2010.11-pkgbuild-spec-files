Index: msynctool-trunk/cmake/modules/FindOpenSync.cmake
===================================================================
--- msynctool-trunk/cmake/modules/FindOpenSync.cmake	(revision 2997)
+++ msynctool-trunk/cmake/modules/FindOpenSync.cmake	(working copy)
@@ -7,13 +7,14 @@
 #
 # Copyright (c) 2007 Daniel Gollub <dgollub@suse.de>
 # Copyright (c) 2007 Alban Browaeys <prahal@yahoo.com>
+# Copyright (c) 2008 Bjoern Ricks <bjoern.ricks@googlemail.com>
 #
 #  Redistribution and use is allowed according to the terms of the New
 #  BSD license.
 #  For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 #
 
-# Take care about opensync-1.0.pc settings
+# Take care about libopensync.pc settings
 INCLUDE( FindPkgConfig )
 
 IF ( OpenSync_FIND_REQUIRED )
@@ -23,31 +24,34 @@
 ENDIF ( OpenSync_FIND_REQUIRED )
 
 IF ( OPENSYNC_MIN_VERSION )
-	PKG_SEARCH_MODULE( OPENSYNC ${_pkgconfig_REQUIRED} opensync-1.0>=${OPENSYNC_MIN_VERSION} )
+	PKG_SEARCH_MODULE( OPENSYNC ${_pkgconfig_REQUIRED} libopensync >=${OPENSYNC_MIN_VERSION} )
 ELSE ( OPENSYNC_MIN_VERSION )
-	PKG_SEARCH_MODULE( OPENSYNC ${_pkgconfig_REQUIRED} opensync-1.0 )
+	PKG_SEARCH_MODULE( OPENSYNC ${_pkgconfig_REQUIRED} libopensync )
 ENDIF ( OPENSYNC_MIN_VERSION )
 
 FIND_PROGRAM( PKGCONFIG_EXECUTABLE NAMES pkg-config )
 
 IF ( PKGCONFIG_EXECUTABLE )
-	EXEC_PROGRAM( ${PKGCONFIG_EXECUTABLE} ARGS opensync-1.0 --variable=datadir OUTPUT_VARIABLE _opensync_data_DIR )
+	EXEC_PROGRAM( ${PKGCONFIG_EXECUTABLE} ARGS libopensync --variable=datadir OUTPUT_VARIABLE _opensync_data_DIR )
 	STRING( REGEX REPLACE "[\r\n]" " " _opensync_data_DIR "${_opensync_data_DIR}"  )
 ENDIF ( PKGCONFIG_EXECUTABLE )
 
 FIND_PATH( OPENSYNC_CMAKE_MODULES "OpenSyncInternal.cmake" PATHS "${_opensync_data_DIR}" PATH_SUFFIXES "cmake/modules" NO_DEFAULT_PATH) 
 FIND_PATH( OPENSYNC_CMAKE_MODULES "OpenSyncInternal.cmake" PATH_SUFFIXES "cmake/modules" ) 
+
 IF ( OPENSYNC_CMAKE_MODULES )
-        SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${OPENSYNC_CMAKE_MODULES}" )
+	SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${OPENSYNC_CMAKE_MODULES}" )
 ELSE ( OPENSYNC_CMAKE_MODULES )
-        MESSAGE( FATAL_ERROR "OpenSync cmake modules not found. Have you installed opensync core or did you set your PKG_CONFIG_PATH if installing in a non system directory ?" )
+	IF ( OpenSync_FIND_REQUIRED )
+		MESSAGE( FATAL_ERROR "OpenSync cmake modules not found. Have you installed opensync core or did you set your PKG_CONFIG_PATH if installing in a non system directory ?" )
+	ENDIF ( OpenSync_FIND_REQUIRED )
 ENDIF ( OPENSYNC_CMAKE_MODULES )
 
 
 # Look for OpenSync include dir and libraries without pkg-config 
 IF( NOT OPENSYNC_FOUND AND NOT PKG_CONFIG_FOUND )
 	# Fallback if pkg-config doesn't exist
-	FIND_PATH( OPENSYNC_INCLUDE_DIRS opensync/opensync.h PATH_SUFFIXES opensync-1.0
+	FIND_PATH( OPENSYNC_INCLUDE_DIRS opensync/opensync.h PATH_SUFFIXES libopensync
 			PATHS
 			/opt/local/include/
 			/sw/include/
