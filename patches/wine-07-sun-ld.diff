--- wine-1.0.orig/configure.ac	2008-06-17 15:46:12.449722000 -0400
+++ wine-1.0/configure.ac	2008-06-17 18:55:42.122386979 -0400
@@ -531,8 +531,13 @@
 
       case $host_cpu in
         *i[[3456789]]86* | x86_64)
+          echo 'data = A0x1000;' >conftest.map
           WINE_TRY_CFLAGS([-Wl,--section-start,.interp=0x7bf00400],
-                          [LDEXECFLAGS="$LDEXECFLAGS -Wl,--section-start,.interp=0x7bf00400"])
+                          [LDEXECFLAGS="$LDEXECFLAGS -Wl,--section-start,.interp=0x7bf00400"],
+                          [WINE_TRY_CFLAGS([-Wl,-M,conftest.map],
+			                   [LDEXECFLAGS="$LDEXECFLAGS -Wl,-M,\$(TOPSRCDIR)/tools/ld-dll.map"
+					    LDDLLFLAGS="$LDDLLFLAGS -Wl,-M,\$(TOPSRCDIR)/tools/ld-dll.map"])])
+	  rm -f conftest.map
           ;;
       esac
 
--- wine-1.0.orig/tools/ld-dll.map	2008-06-17 19:07:10.000000000 -0400
+++ wine-1.0/tools/ld-dll.map	2008-06-17 18:58:52.013579505 -0400
@@ -0,0 +1,6 @@
+# Wine assumes libraries are mapped to contiguous memory regions.
+# Use less restrictive alignment for data section to avoid "holes" between
+# sections that the OS is allowed to use for an anonymous mmap:
+# http://opensolaris.org/jive/message.jspa?messageID=229817#229799
+# ABI says alignment is 0x10000
+data = A0x1000;
--- wine-1.0-rc5/tools/winegcc/winegcc.c	2008-06-13 11:15:29.000000000 -0400
+++ wine-1.0/tools/winegcc/winegcc.c	2008-06-19 17:25:52.491582782 -0400
@@ -136,6 +136,19 @@
     "exec \"$WINELOADER\" \"$apppath\" \"$@\"\n"
 ;
 
+#ifdef __sun
+static const char *mapfile_template =
+    "# ABI says alignment is 0x10000\n"
+    "data = A0x1000;\n"
+;
+static const char *mapfile_image_base_template =
+    "# Base location of image (0x7bf00000 for executables)\n"
+    "text = V%s;\n"
+    "# ABI says alignment is 0x10000\n"
+    "data = A0x1000;\n"
+;
+#endif
+
 static int keep_generated = 0;
 static strarray* tmp_files;
 #ifdef HAVE_SIGSET_T
@@ -166,6 +179,7 @@
     strarray* compiler_args;
     strarray* winebuild_args;
     strarray* files;
+    strarray* linker_mapfiles;
 };
 
 static void clean_temp_files(void)
@@ -622,7 +636,39 @@
     /* link everything together now */
     link_args = strarray_alloc();
     strarray_addall(link_args, get_translator(opts->processor));
+#ifdef __sun
+    {
+	strarray *lddllflags = strarray_fromstring(LDDLLFLAGS, " ");
+	int use_mapfile = opts->linker_mapfiles->size;
+#if 0
+	if (use_mapfile && !opts->image_base)
+	{
+	    opts->image_base = "0x7bf00000";
+	}
+#else
+	opts->image_base = 0;
+#endif
+	for ( j = 0 ; j < lddllflags->size ; j++ ) 
+	{
+	   if (strncmp("-Wl,-M,", lddllflags->base[j], 7) == 0)
+	   {
+		use_mapfile = 1;
+		continue;
+	   }
+	   strarray_add(link_args, lddllflags->base[j]);
+	}
+	/* Create the mapfile ourselves */
+	if (use_mapfile)
+	{
+	    char *mapfile = strmake("%s.map", output_file);
+	    create_file(mapfile, 0644, opts->image_base ? mapfile_image_base_template : mapfile_template, opts->image_base);
+	    strarray_add(link_args, strmake("-Wl,-M,%s", mapfile));
+	    free(mapfile);
+	}
+    }
+#else
     strarray_addall(link_args, strarray_fromstring(LDDLLFLAGS, " "));
+#endif
 
     strarray_add(link_args, "-o");
     strarray_add(link_args, strmake("%s.so", output_file));
@@ -809,6 +855,7 @@
     memset(&opts, 0, sizeof(opts));
     opts.lib_dirs = strarray_alloc();
     opts.files = strarray_alloc();
+    opts.linker_mapfiles = strarray_alloc();
     opts.linker_args = strarray_alloc();
     opts.compiler_args = strarray_alloc();
     opts.winebuild_args = strarray_alloc();
@@ -969,6 +1016,11 @@
                                 opts.image_base = strdup( Wl->base[++j] );
                                 continue;
                             }
+                            if (!strcmp(Wl->base[j], "-M") && j < Wl->size - 1)
+                            {
+                               strarray_add(opts.linker_mapfiles, Wl->base[++j]);
+                               continue;
+                            }
                             if (!strcmp(Wl->base[j], "-static")) linking = -1;
                             strarray_add(opts.linker_args, strmake("-Wl,%s",Wl->base[j]));
                         }
